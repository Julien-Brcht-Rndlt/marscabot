{"version":3,"sources":["../src/webchat-app.jsx"],"names":["WebchatApp","theme","persistentMenu","coverComponent","blockInputs","enableEmojiPicker","enableAttachments","enableUserInput","enableAnimations","hostId","shadowDOM","defaultDelay","defaultTyping","storage","storageKey","onInit","onOpen","onClose","onMessage","appId","visibility","server","Boolean","console","warn","WEBCHAT","DEFAULTS","HOST_ID","webchatRef","host","id","document","getElementById","createElement","body","firstChild","insertBefore","appendChild","attachShadow","mode","node","shadowRoot","args","user","input","from","SENDERS","message","hubtypeService","postMessage","onConnectionRegained","session","messagesJSON","lastMessage","length","lastMessageId","lastMessageUpdateDate","getLastMessageUpdate","HubtypeService","onEvent","event","onServiceEvent","unsentInputs","current","getMessages","filter","msg","ack","unsentInput","action","setOnline","online","updateMessageInfo","type","updateWebchatSettings","data","setTyping","bot","addBotMessage","updateUser","addBotResponse","response","customTypes","customMessageTypes","text","INPUT","TEXT","addUserMessage","payload","POSTBACK","typing","openWebchat","closeWebchat","toggleWebchat","openCoverComponent","closeCoverComponent","toggleCoverComponent","clearMessages","resolveWebchatVisibility","msgId","messageInfo","settings","optionsAtRuntime","webchatOptions","onInitWebchat","onOpenWebchat","onCloseWebchat","onUserInput","webchatState","onStateChange","getWebchatVisibility","status","isOnline","undefined","isWebchatVisible","dest","createRootElement","isVisible","getComponent","getReactMountNode"],"mappings":"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","sourcesContent":["import { HubtypeService, INPUT } from '@botonic/core'\nimport merge from 'lodash.merge'\nimport React, { createRef } from 'react'\nimport { render } from 'react-dom'\n\nimport { SENDERS, WEBCHAT } from './constants'\nimport { msgToBotonic } from './msg-to-botonic'\nimport { isShadowDOMSupported, onDOMLoaded } from './util/dom'\nimport { Webchat } from './webchat/webchat'\n\nexport class WebchatApp {\n  constructor({\n    theme = {},\n    persistentMenu,\n    coverComponent,\n    blockInputs,\n    enableEmojiPicker,\n    enableAttachments,\n    enableUserInput,\n    enableAnimations,\n    hostId,\n    shadowDOM,\n    defaultDelay,\n    defaultTyping,\n    storage,\n    storageKey,\n    onInit,\n    onOpen,\n    onClose,\n    onMessage,\n    appId,\n    visibility,\n    server,\n  }) {\n    this.theme = theme\n    this.persistentMenu = persistentMenu\n    this.coverComponent = coverComponent\n    this.blockInputs = blockInputs\n    this.enableEmojiPicker = enableEmojiPicker\n    this.enableAttachments = enableAttachments\n    this.enableUserInput = enableUserInput\n    this.enableAnimations = enableAnimations\n    this.shadowDOM = Boolean(\n      typeof shadowDOM === 'function' ? shadowDOM() : shadowDOM\n    )\n    if (this.shadowDOM && !isShadowDOMSupported()) {\n      console.warn('[botonic] ShadowDOM not supported on this browser')\n      this.shadowDOM = false\n    }\n    this.hostId = hostId || WEBCHAT.DEFAULTS.HOST_ID\n    this.defaultDelay = defaultDelay\n    this.defaultTyping = defaultTyping\n    this.storage = storage\n    this.storageKey = storageKey\n    this.onInit = onInit\n    this.onOpen = onOpen\n    this.onClose = onClose\n    this.onMessage = onMessage\n    this.visibility = visibility\n    this.server = server\n    this.webchatRef = createRef()\n    this.appId = appId\n  }\n\n  createRootElement(host) {\n    // Create root element <div id='root'> if not exists\n    // Create shadowDOM to root element if needed\n    if (host) {\n      if (host.id && this.hostId) {\n        if (host.id != this.hostId) {\n          console.warn(\n            `[botonic] Host ID \"${host.id}\" don't match 'hostId' option: ${this.hostId}. Using value: ${host.id}.`\n          )\n          this.hostId = host.id\n        }\n      } else if (host.id) this.hostId = host.id\n      else if (this.hostId) host.id = this.hostId\n    } else {\n      host = document.getElementById(this.hostId)\n    }\n    if (!host) {\n      host = document.createElement('div')\n      host.id = this.hostId\n      if (document.body.firstChild)\n        document.body.insertBefore(host, document.body.firstChild)\n      else document.body.appendChild(host)\n    }\n    this.host = this.shadowDOM ? host.attachShadow({ mode: 'open' }) : host\n  }\n\n  getReactMountNode(node) {\n    if (!node) node = this.host\n    return node.shadowRoot ? node.shadowRoot : node\n  }\n\n  onInitWebchat(...args) {\n    this.onInit && this.onInit(this, ...args)\n  }\n\n  onOpenWebchat(...args) {\n    this.onOpen && this.onOpen(this, ...args)\n  }\n\n  onCloseWebchat(...args) {\n    this.onClose && this.onClose(this, ...args)\n  }\n\n  async onUserInput({ user, input }) {\n    this.onMessage &&\n      this.onMessage(this, { from: SENDERS.user, message: input })\n    return this.hubtypeService.postMessage(user, input)\n  }\n\n  async onConnectionRegained() {\n    return this.hubtypeService.onConnectionRegained()\n  }\n\n  onStateChange({ session: { user }, messagesJSON }) {\n    const lastMessage = messagesJSON[messagesJSON.length - 1]\n    const lastMessageId = lastMessage && lastMessage.id\n    const lastMessageUpdateDate = this.getLastMessageUpdate()\n    if (this.hubtypeService) {\n      this.hubtypeService.lastMessageId = lastMessageId\n      this.hubtypeService.lastMessageUpdateDate = lastMessageUpdateDate\n    } else if (!this.hubtypeService && user) {\n      this.hubtypeService = new HubtypeService({\n        appId: this.appId,\n        user,\n        lastMessageId,\n        lastMessageUpdateDate,\n        onEvent: event => this.onServiceEvent(event),\n        unsentInputs: () =>\n          this.webchatRef.current\n            .getMessages()\n            .filter(msg => msg.ack === 0 && msg.unsentInput),\n        server: this.server,\n      })\n    }\n  }\n\n  onServiceEvent(event) {\n    if (event.action === 'connectionChange')\n      this.webchatRef.current.setOnline(event.online)\n    else if (event.action === 'update_message_info')\n      this.updateMessageInfo(event.message.id, event.message)\n    else if (event.message.type === 'update_webchat_settings')\n      this.updateWebchatSettings(event.message.data)\n    else if (event.message.type === 'sender_action')\n      this.setTyping(event.message.data === 'typing_on')\n    else {\n      this.onMessage &&\n        this.onMessage(this, { from: SENDERS.bot, message: event.message })\n      this.addBotMessage(event.message)\n    }\n  }\n\n  updateUser(user) {\n    this.webchatRef.current.updateUser(user)\n  }\n\n  addBotMessage(message) {\n    this.webchatRef.current.addBotResponse({\n      response: msgToBotonic(\n        message,\n        (this.theme.message && this.theme.message.customTypes) ||\n          this.theme.customMessageTypes\n      ),\n    })\n  }\n\n  addBotText(text) {\n    this.addBotMessage({ type: INPUT.TEXT, data: text })\n  }\n\n  addUserMessage(message) {\n    this.webchatRef.current.addUserMessage(message)\n  }\n\n  addUserText(text) {\n    this.webchatRef.current.addUserMessage({ type: INPUT.TEXT, data: text })\n  }\n\n  addUserPayload(payload) {\n    this.webchatRef.current.addUserMessage({ type: INPUT.POSTBACK, payload })\n  }\n\n  setTyping(typing) {\n    this.webchatRef.current.setTyping(typing)\n  }\n\n  open() {\n    this.webchatRef.current.openWebchat()\n  }\n\n  close() {\n    this.webchatRef.current.closeWebchat()\n  }\n\n  toggle() {\n    this.webchatRef.current.toggleWebchat()\n  }\n\n  openCoverComponent() {\n    this.webchatRef.current.openCoverComponent()\n  }\n\n  closeCoverComponent() {\n    this.webchatRef.current.closeCoverComponent()\n  }\n\n  toggleCoverComponent() {\n    this.webchatRef.current.toggleCoverComponent()\n  }\n\n  getMessages() {\n    return this.webchatRef.current.getMessages()\n  }\n\n  clearMessages() {\n    this.webchatRef.current.clearMessages()\n  }\n\n  async getVisibility() {\n    return this.resolveWebchatVisibility({\n      appId: this.appId,\n      visibility: this.visibility,\n    })\n  }\n\n  getLastMessageUpdate() {\n    return this.webchatRef.current.getLastMessageUpdate()\n  }\n\n  updateMessageInfo(msgId, messageInfo) {\n    return this.webchatRef.current.updateMessageInfo(msgId, messageInfo)\n  }\n\n  updateWebchatSettings(settings) {\n    return this.webchatRef.current.updateWebchatSettings(settings)\n  }\n\n  // eslint-disable-next-line complexity\n  getComponent(optionsAtRuntime = {}) {\n    let {\n      theme = {},\n      persistentMenu,\n      coverComponent,\n      blockInputs,\n      enableAttachments,\n      enableUserInput,\n      enableAnimations,\n      enableEmojiPicker,\n      defaultDelay,\n      defaultTyping,\n      storage,\n      storageKey,\n      onInit,\n      onOpen,\n      onClose,\n      onMessage,\n      appId,\n      visibility,\n      server,\n      ...webchatOptions\n    } = optionsAtRuntime\n    theme = merge(this.theme, theme)\n    persistentMenu = persistentMenu || this.persistentMenu\n    coverComponent = coverComponent || this.coverComponent\n    blockInputs = blockInputs || this.blockInputs\n    enableEmojiPicker = enableEmojiPicker || this.enableEmojiPicker\n    enableAttachments = enableAttachments || this.enableAttachments\n    enableUserInput = enableUserInput || this.enableUserInput\n    enableAnimations = enableAnimations || this.enableAnimations\n    defaultDelay = defaultDelay || this.defaultDelay\n    defaultTyping = defaultTyping || this.defaultTyping\n    storage = storage || this.storage\n    storageKey = storageKey || this.storageKey\n    server = server || this.server\n    this.onInit = onInit || this.onInit\n    this.onOpen = onOpen || this.onOpen\n    this.onClose = onClose || this.onClose\n    this.onMessage = onMessage || this.onMessage\n    this.visibility = visibility || this.visibility\n    this.appId = appId || this.appId\n    return (\n      <Webchat\n        {...webchatOptions}\n        ref={this.webchatRef}\n        host={this.host}\n        shadowDOM={this.shadowDOM}\n        theme={theme}\n        persistentMenu={persistentMenu}\n        coverComponent={coverComponent}\n        blockInputs={blockInputs}\n        enableEmojiPicker={enableEmojiPicker}\n        enableAttachments={enableAttachments}\n        enableUserInput={enableUserInput}\n        enableAnimations={enableAnimations}\n        storage={storage}\n        storageKey={storageKey}\n        defaultDelay={defaultDelay}\n        defaultTyping={defaultTyping}\n        onInit={(...args) => this.onInitWebchat(...args)}\n        onOpen={(...args) => this.onOpenWebchat(...args)}\n        onClose={(...args) => this.onCloseWebchat(...args)}\n        onUserInput={(...args) => this.onUserInput(...args)}\n        onStateChange={webchatState => this.onStateChange(webchatState)}\n        server={server}\n      />\n    )\n  }\n\n  async isWebchatVisible({ appId }) {\n    try {\n      const { status } = await HubtypeService.getWebchatVisibility({\n        appId,\n      })\n      return status === 200\n    } catch (e) {\n      return false\n    }\n  }\n\n  isOnline() {\n    return this.webchatRef.current.isOnline()\n  }\n\n  async resolveWebchatVisibility(optionsAtRuntime) {\n    let { appId, visibility } = optionsAtRuntime\n    visibility = visibility || this.visibility\n    if (visibility === undefined || visibility === true) return true\n    if (typeof visibility === 'function' && visibility()) return true\n    if (visibility === 'dynamic' && (await this.isWebchatVisible({ appId })))\n      return true\n    return false\n  }\n\n  async render(dest, optionsAtRuntime = {}) {\n    onDOMLoaded(async () => {\n      this.createRootElement(dest)\n      const isVisible = await this.resolveWebchatVisibility(optionsAtRuntime)\n      if (isVisible)\n        render(\n          this.getComponent(optionsAtRuntime),\n          this.getReactMountNode(dest)\n        )\n    })\n  }\n}\n"],"file":"webchat-app.js"}