{"version":3,"sources":["../../src/webchat/use-storage-state-hook.js"],"names":["useStorageState","storage","storageKey","botonicLocalState","saveLocalState","botonicSessionState","saveSessionState","undefined","sessionStorage"],"mappings":";;;;;;;;;;;AAAA;;AAEO,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,UAAlC,EAA8C;AAAA,yBACP,sCAAgBA,UAAhB,CADO;AAAA;AAAA,MAC5CC,iBAD4C;AAAA,MACzBC,cADyB;;AAAA,2BAEH,wCAAkBF,UAAlB,CAFG;AAAA;AAAA,MAE5CG,mBAF4C;AAAA,MAEvBC,gBAFuB;;AAGnD,MAAIL,OAAO,KAAK,IAAhB,EAAsB,OAAO,CAACM,SAAD,EAAYA,SAAZ,CAAP;AACtB,MAAIN,OAAO,KAAKO,cAAhB,EAAgC,OAAO,CAACH,mBAAD,EAAsBC,gBAAtB,CAAP;AAChC,SAAO,CAACH,iBAAD,EAAoBC,cAApB,CAAP;AACD","sourcesContent":["import { useLocalStorage, useSessionStorage } from 'react-use-storage'\n\nexport function useStorageState(storage, storageKey) {\n  const [botonicLocalState, saveLocalState] = useLocalStorage(storageKey)\n  const [botonicSessionState, saveSessionState] = useSessionStorage(storageKey)\n  if (storage === null) return [undefined, undefined]\n  if (storage === sessionStorage) return [botonicSessionState, saveSessionState]\n  return [botonicLocalState, saveLocalState]\n}\n"],"file":"use-storage-state-hook.js"}