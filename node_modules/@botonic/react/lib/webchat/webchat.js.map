{"version":3,"sources":["../../src/webchat/webchat.jsx"],"names":["getParsedAction","botonicAction","splittedAction","split","length","undefined","JSON","parse","StyledWebchat","styled","div","props","width","height","COLORS","SOLID_WHITE","SOLID_BLACK_ALPHA_0_2","StyledTriggerButton","UserInputContainer","SOLID_BLACK_ALPHA_0_5","TextAreaContainer","FeaturesWrapper","TriggerImage","img","ErrorMessageContainer","ErrorMessage","ERROR_RED","CONCRETE_WHITE","WEBCHAT","DEFAULTS","FONT_FAMILY","DarkBackgroundMenu","SOLID_BLACK","Webchat","ref","webchatHooks","webchatState","addMessage","addMessageComponent","updateMessage","updateReplies","updateLatestInput","updateTyping","updateWebview","updateSession","updateLastRoutePath","updateHandoff","updateTheme","updateDevSettings","toggleWebchat","toggleEmojiPicker","togglePersistentMenu","toggleCoverComponent","setError","setOnline","clearMessages","openWebviewT","closeWebviewT","updateLastMessageDate","setCurrentAttachment","firstUpdate","isOnline","online","currentDateString","Date","toISOString","theme","initialSession","initialDevSettings","onStateChange","getThemeProperty","storage","localStorage","storageKey","STORAGE_KEY","botonicState","saveState","host","document","body","saveWebchatState","messages","messagesJSON","session","lastRoutePath","devSettings","lastMessageUpdate","themeUpdates","deviceAdapter","DeviceAdapter","handleAttachment","event","target","files","size","Error","MAX_ALLOWED_SIZE_MB","fileName","name","file","attachmentType","type","currentAttachment","sendAttachment","sendUserInput","input","onUserInput","user","window","_botonicInsertStyles","botonicStyle","head","appendChild","shadowDOM","cloneNode","querySelectorAll","style","textContent","includes","forEach","m","newComponent","delay","typing","message","customTypes","customMessageTypes","onInit","setTimeout","isWebchatOpen","init","behavior","server","current","openWebview","webviewComponent","params","handleSelectedEmoji","emojiObject","textArea","value","emoji","focus","closeWebview","options","userInputEnabled","payload","sendPayload","path","handleMenu","isPersistentMenuOpen","handleEmojiClick","isEmojiPickerOpen","animationsEnabled","CUSTOM_PROPERTIES","enableAnimations","persistentMenuOptions","persistentMenu","darkBackgroundMenu","getBlockInputs","rule","inputData","match","some","regex","test","checkBlockInput","blockInputs","Array","isArray","data","id","SENDERS","backgroundColor","SCORPION_GRAY","borderColor","padding","closeMenu","borderRadius","getCoverComponent","coverComponent","component","CoverComponent","closeCoverComponent","coverComponentProps","isCoverComponentOpen","messageComponentFromInput","messageComponent","temporaryDisplayUrl","URL","createObjectURL","mediaProps","from","src","sendInput","Object","keys","trim","updateSessionWithUser","userToUpdate","addBotResponse","response","map","r","action","_botonic_action","handoff","startsWith","isDev","setTyping","addUserMessage","updateUser","openWebchat","closeWebchat","openCoverComponent","openWebviewApi","getMessages","getLastMessageUpdate","updateMessageInfo","msgId","messageInfo","messageToUpdate","filter","updatedMsg","ack","unsentInput","updateWebchatSettings","settings","resolveCase","prevSession","on_finish","sendText","text","INPUT","TEXT","POSTBACK","attachment","sendTextAreaText","onKeyDown","keyCode","shiftKey","preventDefault","webviewRequestContext","getString","stringId","setLocale","locale","webviewParams","defaultDelay","defaultTyping","onOpen","onClose","getTriggerImage","triggerImage","triggerButtonImage","LOGO","triggerButtonStyle","CustomTriggerButton","customTrigger","triggerButton","ROLES","TRIGGER_BUTTON","webchatMessageList","flex","webchatReplies","replies","isUserInputEnabled","enableUserInput","emojiPickerEnabled","enableEmojiPicker","attachmentsEnabled","enableAttachments","sendButtonEnabled","enableSendButton","CustomSendButton","customSendButton","CustomMenuButton","customMenuButton","ConditionalAnimation","children","scale","userInputArea","userInputStyle","onFocus","onBlur","textPlaceholder","PLACEHOLDER","e","display","fontSize","border","resize","overflow","outline","paddingLeft","fontFamily","userInputBoxStyle","join","webchatWebview","webviewStyle","mobileStyle","webview","mobileBreakpoint","right","bottom","updateWebchatDevSettings","DarkenBackground","WebchatComponent","ID","error"],"mappings":"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","sourcesContent":["import { INPUT, isMobile, params2queryString } from '@botonic/core'\nimport { motion } from 'framer-motion'\nimport merge from 'lodash.merge'\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport Textarea from 'react-textarea-autosize'\nimport styled, { StyleSheetManager } from 'styled-components'\nimport { useAsyncEffect } from 'use-async-effect'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { Audio, Document, Image, Text, Video } from '../components'\nimport { Handoff } from '../components/handoff'\nimport { normalizeWebchatSettings } from '../components/webchat-settings'\nimport {\n  COLORS,\n  MAX_ALLOWED_SIZE_MB,\n  ROLES,\n  SENDERS,\n  WEBCHAT,\n} from '../constants'\nimport { RequestContext, WebchatContext } from '../contexts'\nimport {\n  getFullMimeWhitelist,\n  getMediaType,\n  isAllowedSize,\n  isAudio,\n  isDocument,\n  isImage,\n  isMedia,\n  isText,\n  isVideo,\n  readDataURL,\n} from '../message-utils'\nimport { msgToBotonic } from '../msg-to-botonic'\nimport { scrollToBottom } from '../util/dom'\nimport { isDev, resolveImage } from '../util/environment'\nimport { ConditionalWrapper } from '../util/react'\nimport { deserializeRegex, stringifyWithRegexs } from '../util/regexs'\nimport {\n  _getThemeProperty,\n  getServerErrorMessage,\n  initSession,\n  shouldKeepSessionOnReload,\n} from '../util/webchat'\nimport { Attachment } from './components/attachment'\nimport { EmojiPicker, OpenedEmojiPicker } from './components/emoji-picker'\nimport {\n  OpenedPersistentMenu,\n  PersistentMenu,\n} from './components/persistent-menu'\nimport { SendButton } from './components/send-button'\nimport { TypingIndicator } from './components/typing-indicator'\nimport { DeviceAdapter } from './devices/device-adapter'\nimport { StyledWebchatHeader } from './header'\nimport {\n  useComponentWillMount,\n  usePrevious,\n  useTyping,\n  useWebchat,\n} from './hooks'\nimport { WebchatMessageList } from './message-list'\nimport { WebchatReplies } from './replies'\nimport { useStorageState } from './use-storage-state-hook'\nimport { WebviewContainer } from './webview'\n\nexport const getParsedAction = botonicAction => {\n  const splittedAction = botonicAction.split('create_case:')\n  if (splittedAction.length <= 1) return undefined\n  return JSON.parse(splittedAction[1])\n}\n\nconst StyledWebchat = styled.div`\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  margin: auto;\n  background-color: ${COLORS.SOLID_WHITE};\n  border-radius: 10px;\n  box-shadow: ${COLORS.SOLID_BLACK_ALPHA_0_2} 0px 0px 12px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledTriggerButton = styled.div`\n  cursor: pointer;\n  position: fixed;\n  background: ${COLORS.SOLID_WHITE};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  width: 65px;\n  height: 65px;\n  bottom: 20px;\n  right: 10px;\n  padding: 8px;\n`\n\nconst UserInputContainer = styled.div`\n  min-height: 52px;\n  display: flex;\n  position: relative;\n  border-top: 1px solid ${COLORS.SOLID_BLACK_ALPHA_0_5};\n`\n\nconst TextAreaContainer = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  align-items: center;\n`\n\nconst FeaturesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1;\n`\n\nconst TriggerImage = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`\n\nconst ErrorMessageContainer = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 1;\n  justify-content: center;\n  width: 100%;\n`\n\nconst ErrorMessage = styled.div`\n  position: absolute;\n  top: 10px;\n  font-size: 14px;\n  line-height: 20px;\n  padding: 4px 11px;\n  display: flex;\n  background-color: ${COLORS.ERROR_RED};\n  color: ${COLORS.CONCRETE_WHITE};\n  border-radius: 5px;\n  align-items: center;\n  justify-content: center;\n  font-family: ${WEBCHAT.DEFAULTS.FONT_FAMILY};\n`\n\nconst DarkBackgroundMenu = styled.div`\n  background: ${COLORS.SOLID_BLACK};\n  opacity: 0.3;\n  z-index: 1;\n  right: 0;\n  bottom: 0;\n  border-radius: 10px;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`\n\n// eslint-disable-next-line complexity\nexport const Webchat = forwardRef((props, ref) => {\n  const {\n    webchatState,\n    addMessage,\n    addMessageComponent,\n    updateMessage,\n    updateReplies,\n    updateLatestInput,\n    updateTyping,\n    updateWebview,\n    updateSession,\n    updateLastRoutePath,\n    updateHandoff,\n    updateTheme,\n    updateDevSettings,\n    toggleWebchat,\n    toggleEmojiPicker,\n    togglePersistentMenu,\n    toggleCoverComponent,\n    setError,\n    setOnline,\n    clearMessages,\n    openWebviewT,\n    closeWebviewT,\n    updateLastMessageDate,\n    setCurrentAttachment,\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n  } = props.webchatHooks || useWebchat()\n  const firstUpdate = useRef(true)\n  const isOnline = () => webchatState.online\n  const currentDateString = () => new Date().toISOString()\n  const theme = merge(webchatState.theme, props.theme)\n  const { initialSession, initialDevSettings, onStateChange } = props\n  const getThemeProperty = _getThemeProperty(theme)\n\n  const storage = props.storage === undefined ? localStorage : props.storage\n  const storageKey =\n    typeof props.storageKey === 'function'\n      ? props.storageKey()\n      : props.storageKey\n\n  const [botonicState, saveState] = useStorageState(\n    storage,\n    storageKey || WEBCHAT.DEFAULTS.STORAGE_KEY\n  )\n\n  const host = props.host || document.body\n\n  const saveWebchatState = webchatState => {\n    storage &&\n      saveState(\n        JSON.parse(\n          stringifyWithRegexs({\n            messages: webchatState.messagesJSON,\n            session: webchatState.session,\n            lastRoutePath: webchatState.lastRoutePath,\n            devSettings: webchatState.devSettings,\n            lastMessageUpdate: webchatState.lastMessageUpdate,\n            themeUpdates: webchatState.themeUpdates,\n          })\n        )\n      )\n  }\n  const deviceAdapter = new DeviceAdapter()\n\n  const handleAttachment = event => {\n    if (!isAllowedSize(event.target.files[0].size)) {\n      throw new Error(\n        `The file is too large. A maximum of ${MAX_ALLOWED_SIZE_MB}MB is allowed.`\n      )\n    }\n    setCurrentAttachment({\n      fileName: event.target.files[0].name,\n      file: event.target.files[0], // TODO: Attach more files?\n      attachmentType: getMediaType(event.target.files[0].type),\n    })\n  }\n\n  useEffect(() => {\n    if (webchatState.currentAttachment)\n      sendAttachment(webchatState.currentAttachment)\n  }, [webchatState.currentAttachment])\n\n  const sendUserInput = async input => {\n    props.onUserInput &&\n      props.onUserInput({\n        user: webchatState.session.user,\n        input: input,\n        session: webchatState.session,\n        lastRoutePath: webchatState.lastRoutePath,\n      })\n  }\n\n  // Load styles stored in window._botonicInsertStyles by Webpack\n  useComponentWillMount(() => {\n    if (window._botonicInsertStyles && window._botonicInsertStyles.length) {\n      for (const botonicStyle of window._botonicInsertStyles) {\n        // Injecting styles at head is needed even if we use shadowDOM\n        // as some dependencies like simplebar rely on creating ephemeral elements\n        // on document.body and assume styles will be available globally\n        document.head.appendChild(botonicStyle)\n\n        // injecting styles in host node too so that shadowDOM works\n        if (props.shadowDOM) host.appendChild(botonicStyle.cloneNode(true))\n      }\n      delete window._botonicInsertStyles\n    }\n\n    if (props.shadowDOM) {\n      // emoji-picker-react injects styles in head, so we need to\n      // re-inject them in our host node to make it work with shadowDOM\n      for (const style of document.querySelectorAll('style')) {\n        if (\n          style.textContent &&\n          style.textContent.includes('emoji-picker-react')\n        )\n          host.appendChild(style.cloneNode(true))\n      }\n    }\n  })\n\n  // Load initial state from storage\n  useEffect(() => {\n    let {\n      messages,\n      session,\n      lastRoutePath,\n      devSettings,\n      lastMessageUpdate,\n      themeUpdates,\n    } = botonicState || {}\n    session = initSession(session)\n    updateSession(session)\n    if (shouldKeepSessionOnReload({ initialDevSettings, devSettings })) {\n      if (messages) {\n        messages.forEach(m => {\n          addMessage(m)\n          const newComponent = msgToBotonic(\n            { ...m, delay: 0, typing: 0 },\n            (props.theme.message && props.theme.message.customTypes) ||\n              props.theme.customMessageTypes\n          )\n          if (newComponent) addMessageComponent(newComponent)\n        })\n      }\n      if (initialSession) updateSession(merge(initialSession, session))\n      if (lastRoutePath) updateLastRoutePath(lastRoutePath)\n    } else updateSession(merge(initialSession, session))\n    if (devSettings) updateDevSettings(devSettings)\n    else if (initialDevSettings) updateDevSettings(initialDevSettings)\n    if (lastMessageUpdate) updateLastMessageDate(lastMessageUpdate)\n    if (themeUpdates !== undefined)\n      updateTheme(merge(props.theme, themeUpdates), themeUpdates)\n    if (props.onInit) setTimeout(() => props.onInit(), 100)\n  }, [])\n\n  useEffect(() => {\n    if (!webchatState.isWebchatOpen) return\n    deviceAdapter.init(host)\n    scrollToBottom({ behavior: 'auto', host })\n  }, [webchatState.isWebchatOpen])\n\n  useEffect(() => {\n    if (onStateChange && typeof onStateChange === 'function')\n      onStateChange(webchatState)\n    saveWebchatState(webchatState)\n  }, [\n    webchatState.messagesJSON,\n    webchatState.session,\n    webchatState.lastRoutePath,\n    webchatState.devSettings,\n    webchatState.lastMessageUpdate,\n  ])\n\n  useAsyncEffect(async () => {\n    if (!webchatState.online) {\n      setError({\n        message: getServerErrorMessage(props.server),\n      })\n    } else {\n      if (!firstUpdate.current) {\n        setError(undefined)\n      }\n    }\n  }, [webchatState.online])\n\n  useTyping({ webchatState, updateTyping, updateMessage, host })\n\n  useEffect(() => {\n    updateTheme(merge(props.theme, theme, webchatState.themeUpdates))\n  }, [props.theme, webchatState.themeUpdates])\n\n  const openWebview = (webviewComponent, params) =>\n    updateWebview(webviewComponent, params)\n\n  const handleSelectedEmoji = (event, emojiObject) => {\n    textArea.current.value += emojiObject.emoji\n    textArea.current.focus()\n  }\n\n  const closeWebview = options => {\n    updateWebview()\n    if (userInputEnabled) {\n      textArea.current.focus()\n    }\n    if (options && options.payload) {\n      sendPayload(options.payload)\n    } else if (options && options.path) {\n      let params = ''\n      if (options.params) params = params2queryString(options.params)\n      sendPayload(`__PATH_PAYLOAD__${options.path}?${params}`)\n    }\n  }\n\n  const handleMenu = () => {\n    togglePersistentMenu(!webchatState.isPersistentMenuOpen)\n  }\n\n  const handleEmojiClick = () => {\n    toggleEmojiPicker(!webchatState.isEmojiPickerOpen)\n  }\n\n  const animationsEnabled = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.enableAnimations,\n    props.enableAnimations !== undefined ? props.enableAnimations : true\n  )\n  const persistentMenuOptions = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.persistentMenu,\n    props.persistentMenu\n  )\n\n  const darkBackgroundMenu = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.darkBackgroundMenu,\n    false\n  )\n\n  const getBlockInputs = (rule, inputData) => {\n    return rule.match.some(regex => {\n      if (typeof regex === 'string') regex = deserializeRegex(regex)\n      return regex.test(inputData)\n    })\n  }\n\n  const checkBlockInput = input => {\n    // if is a text we check if it is a serialized RE\n    const blockInputs = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.blockInputs,\n      props.blockInputs\n    )\n    if (!Array.isArray(blockInputs)) return false\n    for (const rule of blockInputs) {\n      if (getBlockInputs(rule, input.data)) {\n        addMessageComponent(\n          <Text\n            id={input.id}\n            from={SENDERS.user}\n            blob={false}\n            style={{\n              backgroundColor: COLORS.SCORPION_GRAY,\n              borderColor: COLORS.SCORPION_GRAY,\n              padding: '8px 12px',\n            }}\n          >\n            {rule.message}\n          </Text>\n        )\n        updateReplies(false)\n        return true\n      }\n    }\n    return false\n  }\n  const closeMenu = () => {\n    togglePersistentMenu(false)\n  }\n\n  const persistentMenu = () => {\n    return (\n      <OpenedPersistentMenu\n        onClick={closeMenu}\n        options={persistentMenuOptions}\n        borderRadius={webchatState.theme.style.borderRadius || '10px'}\n      />\n    )\n  }\n\n  const getCoverComponent = () => {\n    return getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.coverComponent,\n      props.coverComponent &&\n        (props.coverComponent.component || props.coverComponent)\n    )\n  }\n  const CoverComponent = getCoverComponent()\n\n  const closeCoverComponent = () => {\n    toggleCoverComponent(false)\n  }\n\n  useEffect(() => {\n    if (!CoverComponent) return\n    if (\n      !botonicState ||\n      (botonicState.messages && botonicState.messages.length == 0)\n    )\n      toggleCoverComponent(true)\n  }, [])\n\n  const coverComponent = () => {\n    const coverComponentProps = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.coverComponentProps,\n      props.coverComponent && props.coverComponent.props\n    )\n\n    if (CoverComponent && webchatState.isCoverComponentOpen)\n      return (\n        <CoverComponent\n          closeComponent={closeCoverComponent}\n          {...coverComponentProps}\n        />\n      )\n    return null\n  }\n\n  const messageComponentFromInput = input => {\n    let messageComponent = null\n    if (isText(input)) {\n      messageComponent = (\n        <Text id={input.id} payload={input.payload} from={SENDERS.user}>\n          {input.data}\n        </Text>\n      )\n    } else if (isMedia(input)) {\n      const temporaryDisplayUrl = URL.createObjectURL(input.data)\n      const mediaProps = {\n        id: input.id,\n        from: SENDERS.user,\n        src: temporaryDisplayUrl,\n      }\n      if (isImage(input)) messageComponent = <Image {...mediaProps} />\n      else if (isAudio(input)) messageComponent = <Audio {...mediaProps} />\n      else if (isVideo(input)) messageComponent = <Video {...mediaProps} />\n      else if (isDocument(input))\n        messageComponent = <Document {...mediaProps} />\n    }\n    return messageComponent\n  }\n\n  const sendInput = async input => {\n    if (!input || Object.keys(input).length == 0) return\n    if (isText(input) && (!input.data || !input.data.trim())) return // in case trim() doesn't work in a browser we can use !/\\S/.test(input.data)\n    if (isText(input) && checkBlockInput(input)) return\n    if (!input.id) input.id = uuidv4()\n    const messageComponent = messageComponentFromInput(input)\n    if (messageComponent) addMessageComponent(messageComponent)\n    if (isMedia(input)) input.data = await readDataURL(input.data)\n    sendUserInput(input)\n    updateLatestInput(input)\n    isOnline() && updateLastMessageDate(currentDateString())\n    updateReplies(false)\n    togglePersistentMenu(false)\n    toggleEmojiPicker(false)\n  }\n\n  /* This is the public API this component exposes to its parents\n  https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n  */\n\n  const updateSessionWithUser = userToUpdate =>\n    updateSession(merge(webchatState.session, { user: userToUpdate }))\n\n  useImperativeHandle(ref, () => ({\n    addBotResponse: ({ response, session, lastRoutePath }) => {\n      updateTyping(false)\n      if (Array.isArray(response)) response.map(r => addMessageComponent(r))\n      else if (response) addMessageComponent(response)\n      if (session) {\n        updateSession(merge(session, { user: webchatState.session.user }))\n        const action = session._botonic_action || ''\n        const handoff = action.startsWith('create_case')\n        if (handoff && isDev) addMessageComponent(<Handoff />)\n        updateHandoff(handoff)\n      }\n      if (lastRoutePath) updateLastRoutePath(lastRoutePath)\n      updateLastMessageDate(currentDateString())\n    },\n    setTyping: typing => updateTyping(typing),\n    addUserMessage: message => sendInput(message),\n    updateUser: updateSessionWithUser,\n    openWebchat: () => toggleWebchat(true),\n    closeWebchat: () => toggleWebchat(false),\n    toggleWebchat: () => toggleWebchat(!webchatState.isWebchatOpen),\n    openCoverComponent: () => toggleCoverComponent(true),\n    closeCoverComponent: () => toggleCoverComponent(false),\n    toggleCoverComponent: () =>\n      toggleCoverComponent(!webchatState.isCoverComponentOpen),\n    openWebviewApi: component => openWebviewT(component),\n    setError,\n    setOnline,\n    getMessages: () => webchatState.messagesJSON,\n    isOnline,\n    clearMessages: () => {\n      clearMessages()\n      updateReplies(false)\n    },\n    getLastMessageUpdate: () => webchatState.lastMessageUpdate,\n    updateMessageInfo: (msgId, messageInfo) => {\n      const messageToUpdate = webchatState.messagesJSON.filter(\n        m => m.id == msgId\n      )[0]\n      const updatedMsg = merge(messageToUpdate, messageInfo)\n      if (updatedMsg.ack === 1) delete updatedMsg.unsentInput\n      updateMessage(updatedMsg)\n    },\n    updateWebchatSettings: settings => {\n      const themeUpdates = normalizeWebchatSettings(settings)\n      updateTheme(merge(webchatState.theme, themeUpdates), themeUpdates)\n    },\n  }))\n\n  const resolveCase = () => {\n    updateHandoff(false)\n    updateSession({ ...webchatState.session, _botonic_action: null })\n  }\n\n  const prevSession = usePrevious(webchatState.session)\n  useEffect(() => {\n    // Resume conversation after handoff\n    if (\n      prevSession &&\n      prevSession._botonic_action &&\n      !webchatState.session._botonic_action\n    ) {\n      const action = getParsedAction(prevSession._botonic_action)\n      if (action && action.on_finish) sendPayload(action.on_finish)\n    }\n  }, [webchatState.session._botonic_action])\n\n  const sendText = async (text, payload) => {\n    if (!text) return\n    const input = { type: INPUT.TEXT, data: text, payload }\n    await sendInput(input)\n  }\n\n  const sendPayload = async payload => {\n    if (!payload) return\n    const input = { type: INPUT.POSTBACK, payload }\n    await sendInput(input)\n  }\n\n  const sendAttachment = async attachment => {\n    if (attachment.file) {\n      const attachmentType = getMediaType(attachment.file.type)\n      if (!attachmentType) return\n      const input = {\n        type: attachmentType,\n        data: attachment.file,\n      }\n      await sendInput(input)\n      setCurrentAttachment(undefined)\n    }\n  }\n\n  const sendTextAreaText = () => {\n    sendText(textArea.current.value)\n    textArea.current.value = ''\n  }\n\n  const onKeyDown = event => {\n    if (event.keyCode == 13 && event.shiftKey == false) {\n      event.preventDefault()\n      sendTextAreaText()\n    }\n  }\n\n  const webviewRequestContext = {\n    getString: stringId => props.getString(stringId, webchatState.session),\n    setLocale: locale => props.getString(locale, webchatState.session),\n    session: webchatState.session || {},\n    params: webchatState.webviewParams || {},\n    closeWebview: closeWebview,\n    defaultDelay: props.defaultDelay || 0,\n    defaultTyping: props.defaultTyping || 0,\n  }\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false\n      return\n    }\n    if (webchatState.isWebchatOpen && props.onOpen) props.onOpen()\n    if (!webchatState.isWebchatOpen && props.onClose && !firstUpdate.current) {\n      props.onClose()\n      toggleEmojiPicker(false)\n      togglePersistentMenu(false)\n    }\n  }, [webchatState.isWebchatOpen])\n\n  const textArea = useRef()\n\n  const getTriggerImage = () => {\n    const triggerImage = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.triggerButtonImage,\n      null\n    )\n    if (triggerImage === null) {\n      webchatState.theme.triggerButtonImage = WEBCHAT.DEFAULTS.LOGO\n      return null\n    }\n    return triggerImage\n  }\n\n  const triggerButtonStyle = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.triggerButtonStyle\n  )\n\n  const CustomTriggerButton = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.customTrigger,\n    undefined\n  )\n\n  const triggerButton = () => {\n    if (CustomTriggerButton) {\n      return <CustomTriggerButton />\n    }\n    return (\n      <StyledTriggerButton\n        role={ROLES.TRIGGER_BUTTON}\n        style={{ ...triggerButtonStyle }}\n      >\n        {getTriggerImage() && (\n          <TriggerImage src={resolveImage(getTriggerImage())} />\n        )}\n      </StyledTriggerButton>\n    )\n  }\n\n  const webchatMessageList = () => (\n    <WebchatMessageList style={{ flex: 1 }}>\n      {webchatState.typing && <TypingIndicator />}\n    </WebchatMessageList>\n  )\n  const webchatReplies = () => <WebchatReplies replies={webchatState.replies} />\n\n  const isUserInputEnabled = () => {\n    const isUserInputEnabled = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.enableUserInput,\n      props.enableUserInput !== undefined ? props.enableUserInput : true\n    )\n    return isUserInputEnabled && !webchatState.isCoverComponentOpen\n  }\n\n  const userInputEnabled = isUserInputEnabled()\n  const emojiPickerEnabled = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.enableEmojiPicker,\n    props.enableEmojiPicker\n  )\n  const attachmentsEnabled = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.enableAttachments,\n    props.enableAttachments\n  )\n  const sendButtonEnabled = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.enableSendButton,\n    true\n  )\n  const CustomSendButton = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.customSendButton,\n    undefined\n  )\n  const CustomMenuButton = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.customMenuButton,\n    undefined\n  )\n\n  const ConditionalAnimation = props => (\n    <ConditionalWrapper\n      condition={animationsEnabled}\n      wrapper={children => (\n        <motion.div whileHover={{ scale: 1.2 }}>{children}</motion.div>\n      )}\n    >\n      {props.children}\n    </ConditionalWrapper>\n  )\n\n  const userInputArea = () => {\n    return (\n      userInputEnabled && (\n        <UserInputContainer\n          style={{\n            ...getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.userInputStyle),\n          }}\n        >\n          {webchatState.isEmojiPickerOpen && (\n            <OpenedEmojiPicker\n              height={webchatState.theme.style.height}\n              onEmojiClick={handleSelectedEmoji}\n              onClick={handleEmojiClick}\n            />\n          )}\n          {persistentMenuOptions && (\n            <FeaturesWrapper>\n              <ConditionalAnimation>\n                <div onClick={handleMenu}>\n                  {CustomMenuButton ? <CustomMenuButton /> : <PersistentMenu />}\n                </div>\n              </ConditionalAnimation>\n            </FeaturesWrapper>\n          )}\n          <TextAreaContainer>\n            <Textarea\n              name='text'\n              onFocus={() => deviceAdapter.onFocus(host)}\n              onBlur={() => deviceAdapter.onBlur()}\n              maxRows={4}\n              wrap='soft'\n              maxLength='1000'\n              placeholder={getThemeProperty(\n                WEBCHAT.CUSTOM_PROPERTIES.textPlaceholder,\n                WEBCHAT.DEFAULTS.PLACEHOLDER\n              )}\n              autoFocus={true}\n              inputRef={textArea}\n              onKeyDown={e => onKeyDown(e)}\n              style={{\n                display: 'flex',\n                fontSize: deviceAdapter.fontSize(14),\n                width: '100%',\n                border: 'none',\n                resize: 'none',\n                overflow: 'auto',\n                outline: 'none',\n                flex: '1 1 auto',\n                padding: 10,\n                paddingLeft: persistentMenuOptions ? 0 : 10,\n                fontFamily: 'inherit',\n                ...getThemeProperty(\n                  WEBCHAT.CUSTOM_PROPERTIES.userInputBoxStyle\n                ),\n              }}\n            />\n          </TextAreaContainer>\n          <FeaturesWrapper>\n            {emojiPickerEnabled && (\n              <ConditionalAnimation>\n                <EmojiPicker onClick={handleEmojiClick} />\n              </ConditionalAnimation>\n            )}\n            {attachmentsEnabled && (\n              <ConditionalAnimation>\n                <Attachment\n                  onChange={handleAttachment}\n                  accept={getFullMimeWhitelist().join(',')}\n                />\n              </ConditionalAnimation>\n            )}\n            {(sendButtonEnabled || CustomSendButton) && (\n              <ConditionalAnimation>\n                <div onClick={sendTextAreaText}>\n                  {CustomSendButton ? <CustomSendButton /> : <SendButton />}\n                </div>\n              </ConditionalAnimation>\n            )}\n          </FeaturesWrapper>\n        </UserInputContainer>\n      )\n    )\n  }\n\n  const webchatWebview = () => (\n    <RequestContext.Provider value={webviewRequestContext}>\n      <WebviewContainer\n        style={{\n          ...getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.webviewStyle),\n          ...mobileStyle,\n        }}\n        webview={webchatState.webview}\n      />\n    </RequestContext.Provider>\n  )\n  let mobileStyle = {}\n  if (isMobile(getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.mobileBreakpoint))) {\n    mobileStyle = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.mobileStyle) || {\n      width: '100%',\n      height: '100%',\n      right: 0,\n      bottom: 0,\n      borderRadius: 0,\n    }\n  }\n\n  useEffect(() => {\n    // Prod mode\n    saveWebchatState(webchatState)\n    scrollToBottom({ host })\n  }, [webchatState.themeUpdates])\n\n  // Only needed for dev/serve mode\n  const updateWebchatDevSettings = settings => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const themeUpdates = normalizeWebchatSettings(settings)\n      updateTheme(merge(webchatState.theme, themeUpdates), themeUpdates)\n    }, [webchatState.messagesJSON])\n  }\n\n  const DarkenBackground = ({ component }) => {\n    return (\n      <div>\n        {darkBackgroundMenu && (\n          <DarkBackgroundMenu\n            style={{\n              borderRadius: webchatState.theme.style.borderRadius,\n            }}\n          />\n        )}\n        {component}\n      </div>\n    )\n  }\n\n  const WebchatComponent = (\n    <WebchatContext.Provider\n      value={{\n        sendText,\n        sendAttachment,\n        sendPayload,\n        sendInput,\n        openWebview,\n        resolveCase,\n        webchatState,\n        getThemeProperty,\n        addMessage,\n        toggleWebchat,\n        updateMessage,\n        updateReplies,\n        updateLatestInput,\n        updateUser: updateSessionWithUser,\n        updateWebchatDevSettings: updateWebchatDevSettings,\n      }}\n    >\n      {!webchatState.isWebchatOpen && (\n        <div\n          onClick={event => {\n            toggleWebchat(true)\n            event.preventDefault()\n          }}\n        >\n          {triggerButton()}\n        </div>\n      )}\n      {webchatState.isWebchatOpen && (\n        <StyledWebchat\n          // TODO: Distinguis between multiple instances of webchat, e.g. `${uniqueId}-botonic-webchat`\n          role={ROLES.WEBCHAT}\n          id={WEBCHAT.DEFAULTS.ID}\n          width={webchatState.width}\n          height={webchatState.height}\n          style={{\n            ...webchatState.theme.style,\n            ...mobileStyle,\n          }}\n        >\n          <StyledWebchatHeader\n            onCloseClick={() => {\n              toggleWebchat(false)\n            }}\n          />\n          {webchatState.error.message && (\n            <ErrorMessageContainer>\n              <ErrorMessage>{webchatState.error.message}</ErrorMessage>\n            </ErrorMessageContainer>\n          )}\n          {webchatMessageList()}\n          {webchatState.replies &&\n            Object.keys(webchatState.replies).length > 0 &&\n            webchatReplies()}\n          {webchatState.isPersistentMenuOpen && (\n            <DarkenBackground component={persistentMenu()} />\n          )}\n          {!webchatState.handoff && userInputArea()}\n          {webchatState.webview && webchatWebview()}\n          {webchatState.isCoverComponentOpen && (\n            <DarkenBackground component={coverComponent()} />\n          )}\n        </StyledWebchat>\n      )}\n    </WebchatContext.Provider>\n  )\n  return props.shadowDOM ? (\n    <StyleSheetManager target={host}>{WebchatComponent}</StyleSheetManager>\n  ) : (\n    WebchatComponent\n  )\n})\n"],"file":"webchat.js"}