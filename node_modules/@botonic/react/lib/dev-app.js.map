{"version":3,"sources":["../src/dev-app.jsx"],"names":["DevApp","theme","persistentMenu","coverComponent","blockInputs","enableEmojiPicker","enableAttachments","enableUserInput","enableAnimations","shadowDOM","hostId","storage","storageKey","onInit","onOpen","onClose","onMessage","botOptions","bot","ReactBot","optionsAtRuntime","webchatOptions","webchatRef","host","stringId","session","getString","locale","setLocale","onInitWebchat","onOpenWebchat","onCloseWebchat","onUserInput","dest","createRootElement","getComponent","getReactMountNode","input","lastRoutePath","from","SENDERS","user","message","resp","response","map","r","current","addBotResponse","WebchatApp"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge'\nimport React from 'react'\nimport { render } from 'react-dom'\n\nimport { SENDERS } from './constants'\nimport { ReactBot } from './react-bot'\nimport { onDOMLoaded } from './util/dom'\nimport { WebchatDev } from './webchat/webchat-dev'\nimport { WebchatApp } from './webchat-app'\n\nexport class DevApp extends WebchatApp {\n  constructor({\n    theme = {},\n    persistentMenu,\n    coverComponent,\n    blockInputs,\n    enableEmojiPicker,\n    enableAttachments,\n    enableUserInput,\n    enableAnimations,\n    shadowDOM,\n    hostId,\n    storage,\n    storageKey,\n    onInit,\n    onOpen,\n    onClose,\n    onMessage,\n    ...botOptions\n  }) {\n    super({\n      theme,\n      persistentMenu,\n      coverComponent,\n      blockInputs,\n      enableEmojiPicker,\n      enableAttachments,\n      enableUserInput,\n      enableAnimations,\n      shadowDOM,\n      hostId,\n      storage,\n      storageKey,\n      onInit,\n      onOpen,\n      onClose,\n      onMessage,\n    })\n    this.bot = new ReactBot({\n      ...botOptions,\n    })\n  }\n\n  getComponent(optionsAtRuntime = {}) {\n    let {\n      theme = {},\n      persistentMenu,\n      coverComponent,\n      blockInputs,\n      enableEmojiPicker,\n      enableAttachments,\n      enableUserInput,\n      enableAnimations,\n      storage,\n      storageKey,\n      onInit,\n      onOpen,\n      onClose,\n      onMessage,\n      ...webchatOptions\n    } = optionsAtRuntime\n    theme = merge(this.theme, theme)\n    persistentMenu = persistentMenu || this.persistentMenu\n    coverComponent = coverComponent || this.coverComponent\n    blockInputs = blockInputs || this.blockInputs\n    enableEmojiPicker = enableEmojiPicker || this.enableEmojiPicker\n    enableAttachments = enableAttachments || this.enableAttachments\n    enableUserInput = enableUserInput || this.enableUserInput\n    enableAnimations = enableAnimations || this.enableAnimations\n    storage = storage || this.storage\n    storageKey = storageKey || this.storageKey\n    this.onInit = onInit || this.onInit\n    this.onOpen = onOpen || this.onOpen\n    this.onClose = onClose || this.onClose\n    this.onMessage = onMessage || this.onMessage\n    return (\n      <WebchatDev\n        {...webchatOptions}\n        ref={this.webchatRef}\n        host={this.host}\n        shadowDOM={this.shadowDOM}\n        theme={theme}\n        persistentMenu={persistentMenu}\n        coverComponent={coverComponent}\n        blockInputs={blockInputs}\n        enableEmojiPicker={enableEmojiPicker}\n        enableAttachments={enableAttachments}\n        enableUserInput={enableUserInput}\n        enableAnimations={enableAnimations}\n        storage={storage}\n        storageKey={storageKey}\n        getString={(stringId, session) => this.bot.getString(stringId, session)}\n        setLocale={(locale, session) => this.bot.setLocale(locale, session)}\n        onInit={(...args) => this.onInitWebchat(...args)}\n        onOpen={(...args) => this.onOpenWebchat(...args)}\n        onClose={(...args) => this.onCloseWebchat(...args)}\n        onUserInput={(...args) => this.onUserInput(...args)}\n      />\n    )\n  }\n\n  render(dest, optionsAtRuntime = {}) {\n    onDOMLoaded(() => {\n      this.createRootElement(dest)\n      render(this.getComponent(optionsAtRuntime), this.getReactMountNode(dest))\n    })\n  }\n\n  async onUserInput({ input, session, lastRoutePath }) {\n    this.onMessage &&\n      this.onMessage(this, { from: SENDERS.user, message: input })\n    const resp = await this.bot.input({ input, session, lastRoutePath })\n    this.onMessage &&\n      resp.response.map(r =>\n        this.onMessage(this, { from: SENDERS.bot, message: r })\n      )\n    this.webchatRef.current.addBotResponse(resp)\n  }\n}\n"],"file":"dev-app.js"}