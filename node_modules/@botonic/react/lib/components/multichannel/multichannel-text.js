"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultichannelText = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _react = _interopRequireWildcard(require("react"));

var _contexts = require("../../contexts");

var _text2 = require("../text");

var _facebook = require("./facebook/facebook");

var _multichannelButton = require("./multichannel-button");

var _multichannelContext = require("./multichannel-context");

var _multichannelUtils = require("./multichannel-utils");

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var MultichannelText = function MultichannelText(props) {
  var requestContext = (0, _react.useContext)(_contexts.RequestContext);
  var multichannelContext = (0, _react.useContext)(_multichannelContext.MultichannelContext);
  var elements = [];

  var getText = function getText(children) {
    children = Array.isArray(children) ? children : [children];
    var text = children.filter(function (e) {
      return e && !e.type;
    }).map(function (e) {
      if (Array.isArray(e)) return getText(e);else return String(e);
    }).join('');

    if (text == undefined) {
      return [];
    }

    return [text].filter(function (t) {
      return t !== '';
    }); // to avoid line breaks when the carousel doesn't have title or subtitle
  };

  var getButtonsAndReplies = function getButtonsAndReplies() {
    return [].concat((0, _multichannelUtils.getMultichannelButtons)(_react["default"].Children.toArray(props.children)), (0, _multichannelUtils.getMultichannelReplies)(_react["default"].Children.toArray(props.children)));
  };

  var getWhatsappButtons = function getWhatsappButtons() {
    var postbackButtons = [];
    var urlButtons = [];

    var _iterator = _createForOfIteratorHelper(getButtonsAndReplies()),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var button = _step.value;
        if ((0, _multichannelUtils.elementHasUrl)(button)) urlButtons.push(button);
        if ((0, _multichannelUtils.elementHasPostback)(button)) postbackButtons.push(button);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return {
      postbackButtons: postbackButtons,
      urlButtons: urlButtons
    };
  };

  var getDefaultIndex = function getDefaultIndex() {
    if (props.indexMode == undefined) {
      return undefined;
    }

    if (multichannelContext.currentIndex != null) {
      return multichannelContext.currentIndex;
    }

    return props.indexMode === 'letter' ? 'a' : 1;
  };

  if ((0, _multichannelUtils.isWhatsapp)(requestContext)) {
    var text = getText(props.children);

    var _getWhatsappButtons = getWhatsappButtons(),
        postbackButtons = _getWhatsappButtons.postbackButtons,
        urlButtons = _getWhatsappButtons.urlButtons;

    elements = [].concat((0, _toConsumableArray2["default"])(text), (0, _toConsumableArray2["default"])(postbackButtons), (0, _toConsumableArray2["default"])(urlButtons));
    multichannelContext.currentIndex = getDefaultIndex();
    elements = elements.map(function (element, i) {
      var newline = multichannelContext.messageSeparator == null && i === 0 ? '' : '\n';

      if ((0, _multichannelUtils.isMultichannelButton)(element) || (0, _multichannelUtils.isMultichannelReply)(element)) {
        return /*#__PURE__*/_react["default"].createElement(_multichannelButton.MultichannelButton, (0, _extends2["default"])({
          key: i,
          newline: newline
        }, element.props), element.props.children);
      } else if (typeof element === 'string') {
        return (props.newline || '') + element;
      } else {
        return element;
      }
    });

    if (multichannelContext.messageSeparator != null) {
      return elements;
    }

    return /*#__PURE__*/_react["default"].createElement(_text2.Text, (0, _extends2["default"])({}, _multichannelUtils.MULTICHANNEL_WHATSAPP_PROPS, props), elements);
  }

  if ((0, _multichannelUtils.isFacebook)(requestContext)) {
    var _text = getText(props.children);

    var multichannelFacebook = new _facebook.MultichannelFacebook();

    var _multichannelFacebook = multichannelFacebook.convertText(props, _text[0]),
        texts = _multichannelFacebook.texts,
        propsLastText = _multichannelFacebook.propsLastText,
        propsWithoutChildren = _multichannelFacebook.propsWithoutChildren;

    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, texts && texts.map(function (e, i) {
      return /*#__PURE__*/_react["default"].createElement(_text2.Text, (0, _extends2["default"])({
        key: i
      }, propsWithoutChildren), e);
    }), /*#__PURE__*/_react["default"].createElement(_text2.Text, propsLastText, propsLastText.children));
  } else {
    return /*#__PURE__*/_react["default"].createElement(_text2.Text, props, props.children);
  }
};

exports.MultichannelText = MultichannelText;
//# sourceMappingURL=multichannel-text.js.map