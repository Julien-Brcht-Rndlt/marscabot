"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Multichannel = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _constants = require("../../constants");

var _contexts = require("../../contexts");

var _react2 = require("../../util/react");

var _text = require("../text");

var _multichannelButton = require("./multichannel-button");

var _multichannelCarousel = require("./multichannel-carousel");

var _multichannelContext = require("./multichannel-context");

var _multichannelReply = require("./multichannel-reply");

var _multichannelText = require("./multichannel-text");

var _multichannelUtils = require("./multichannel-utils");

var Multichannel = function Multichannel(props) {
  var requestContext = (0, _react.useContext)(_contexts.RequestContext);

  if (!(0, _multichannelUtils.isWhatsapp)(requestContext) && !(0, _multichannelUtils.isFacebook)(requestContext)) {
    return props.children;
  }

  if ((0, _multichannelUtils.isFacebook)(requestContext)) {
    var _newChildren = (0, _react2.deepMapWithIndex)(props.children, function (child) {
      if (child && child.type && child.type.name === _constants.COMPONENT_TYPE.TEXT) {
        return /*#__PURE__*/_react["default"].createElement(_multichannelText.MultichannelText, (0, _extends2["default"])({}, child.props, {
          key: child.key
        }), child.props.children);
      }

      return child;
    });

    return _newChildren;
  }

  var newChildren = (0, _react2.deepMapWithIndex)(props.children, function (child, index) {
    if (child && child.type && child.type.name === _constants.COMPONENT_TYPE.BUTTON) {
      return /*#__PURE__*/_react["default"].createElement(_multichannelButton.MultichannelButton, (0, _extends2["default"])({}, child.props, {
        key: child.key
      }), child.props.children);
    }

    if (child && child.type && child.type.name === _constants.COMPONENT_TYPE.REPLY) {
      return /*#__PURE__*/_react["default"].createElement(_multichannelReply.MultichannelReply, (0, _extends2["default"])({}, child.props, {
        key: child.key
      }), child.props.children);
    }

    if (child && child.type && child.type.name === _constants.COMPONENT_TYPE.TEXT) {
      return /*#__PURE__*/_react["default"].createElement(_multichannelText.MultichannelText, (0, _extends2["default"])({}, child.props, props.text, {
        key: child.key
      }, props.messageSeparator && index > 0 && {
        newline: props.messageSeparator
      }), child.props.children);
    }

    if (child && child.type && child.type.name === _constants.COMPONENT_TYPE.CAROUSEL) {
      return /*#__PURE__*/_react["default"].createElement(_multichannelCarousel.MultichannelCarousel, (0, _extends2["default"])({}, child.props, props.carousel, {
        key: child.key
      }), child.props.children);
    }

    return child;
  });

  if (props.messageSeparator != null) {
    newChildren = newChildren.map(function (c, index) {
      return index > 0 && typeof c === 'string' ? props.messageSeparator + c : c;
    });
    newChildren = /*#__PURE__*/_react["default"].createElement(_text.Text, (0, _extends2["default"])({
      key: props.key
    }, _multichannelUtils.MULTICHANNEL_WHATSAPP_PROPS), newChildren);
  }

  return /*#__PURE__*/_react["default"].createElement(_multichannelContext.MultichannelContext.Provider, {
    value: {
      currentIndex: props.firstIndex,
      boldIndex: props.boldIndex,
      indexSeparator: props.indexSeparator,
      messageSeparator: props.messageSeparator
    }
  }, newChildren);
};

exports.Multichannel = Multichannel;
//# sourceMappingURL=multichannel.js.map