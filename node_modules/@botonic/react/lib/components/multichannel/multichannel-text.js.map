{"version":3,"sources":["../../../src/components/multichannel/multichannel-text.jsx"],"names":["MultichannelText","props","requestContext","RequestContext","multichannelContext","MultichannelContext","elements","getText","children","Array","isArray","text","filter","e","type","map","String","join","undefined","t","getButtonsAndReplies","concat","React","Children","toArray","getWhatsappButtons","postbackButtons","urlButtons","button","push","getDefaultIndex","indexMode","currentIndex","element","i","newline","messageSeparator","MULTICHANNEL_WHATSAPP_PROPS","multichannelFacebook","MultichannelFacebook","convertText","texts","propsLastText","propsWithoutChildren"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\n\nimport { RequestContext } from '../../contexts'\nimport { Text } from '../text'\nimport { MultichannelFacebook } from './facebook/facebook'\nimport { MultichannelButton } from './multichannel-button'\nimport { MultichannelContext } from './multichannel-context'\nimport {\n  elementHasPostback,\n  elementHasUrl,\n  getMultichannelButtons,\n  getMultichannelReplies,\n  isFacebook,\n  isMultichannelButton,\n  isMultichannelReply,\n  isWhatsapp,\n  MULTICHANNEL_WHATSAPP_PROPS,\n} from './multichannel-utils'\n\nexport const MultichannelText = props => {\n  const requestContext = useContext(RequestContext)\n  const multichannelContext = useContext(MultichannelContext)\n\n  let elements = []\n\n  const getText = children => {\n    children = Array.isArray(children) ? children : [children]\n    const text = children\n      .filter(e => e && !e.type)\n      .map(e => {\n        if (Array.isArray(e)) return getText(e)\n        else return String(e)\n      })\n      .join('')\n    if (text == undefined) {\n      return []\n    }\n    return [text].filter(t => t !== '') // to avoid line breaks when the carousel doesn't have title or subtitle\n  }\n\n  const getButtonsAndReplies = () =>\n    [].concat(\n      getMultichannelButtons(React.Children.toArray(props.children)),\n      getMultichannelReplies(React.Children.toArray(props.children))\n    )\n\n  const getWhatsappButtons = () => {\n    const postbackButtons = []\n    const urlButtons = []\n    for (const button of getButtonsAndReplies()) {\n      if (elementHasUrl(button)) urlButtons.push(button)\n      if (elementHasPostback(button)) postbackButtons.push(button)\n    }\n    return { postbackButtons, urlButtons }\n  }\n\n  const getDefaultIndex = () => {\n    if (props.indexMode == undefined) {\n      return undefined\n    }\n    if (multichannelContext.currentIndex != null) {\n      return multichannelContext.currentIndex\n    }\n    return props.indexMode === 'letter' ? 'a' : 1\n  }\n\n  if (isWhatsapp(requestContext)) {\n    const text = getText(props.children)\n    const { postbackButtons, urlButtons } = getWhatsappButtons()\n\n    elements = [].concat([...text], [...postbackButtons], [...urlButtons])\n    multichannelContext.currentIndex = getDefaultIndex()\n    elements = elements.map((element, i) => {\n      const newline =\n        multichannelContext.messageSeparator == null && i === 0 ? '' : '\\n'\n      if (isMultichannelButton(element) || isMultichannelReply(element)) {\n        return (\n          <MultichannelButton key={i} newline={newline} {...element.props}>\n            {element.props.children}\n          </MultichannelButton>\n        )\n      } else if (typeof element === 'string') {\n        return (props.newline || '') + element\n      } else {\n        return element\n      }\n    })\n    if (multichannelContext.messageSeparator != null) {\n      return elements\n    }\n    return (\n      <Text {...MULTICHANNEL_WHATSAPP_PROPS} {...props}>\n        {elements}\n      </Text>\n    )\n  }\n  if (isFacebook(requestContext)) {\n    const text = getText(props.children)\n    const multichannelFacebook = new MultichannelFacebook()\n    const {\n      texts,\n      propsLastText,\n      propsWithoutChildren,\n    } = multichannelFacebook.convertText(props, text[0])\n    return (\n      <>\n        {texts &&\n          texts.map((e, i) => (\n            <Text key={i} {...propsWithoutChildren}>\n              {e}\n            </Text>\n          ))}\n        <Text {...propsLastText}>{propsLastText.children}</Text>\n      </>\n    )\n  } else {\n    return <Text {...props}>{props.children}</Text>\n  }\n}\n"],"file":"multichannel-text.js"}