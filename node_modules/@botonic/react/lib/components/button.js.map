{"version":3,"sources":["../../src/components/button.jsx"],"names":["StyledButton","styled","button","COLORS","SEASHELL_WHITE","props","top","bottom","Button","WebchatContext","webchatState","openWebview","sendPayload","sendInput","getThemeProperty","updateMessage","hover","setHover","theme","ButtonsDisabler","resolveDisabling","autoDisable","disabledStyle","handleClick","event","preventDefault","type","WEBCHAT","CUSTOM_PROPERTIES","buttonMessageType","INPUT","TEXT","webview","params","path","POSTBACK","data","String","children","payload","url","window","open","target","onClick","setDisabled","messageToUpdate","messagesJSON","filter","m","id","parentId","updatedMsg","getUpdatedMessage","renderBrowser","buttonStyle","CustomButton","customButton","e","buttonBgColor","buttonHoverBackground","CONCRETE_WHITE","buttonStyleBackground","SOLID_WHITE","buttonTextColor","buttonHoverTextColor","SOLID_BLACK","buttonStyleColor","color","backgroundColor","disabled","bottomRadius","renderNode","disabledProps","constructNodeProps","Webview","name","Error","serialize","buttonProps","title","withDisabledProps"],"mappings":"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","sourcesContent":["import { INPUT, params2queryString } from '@botonic/core'\nimport React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { COLORS, WEBCHAT } from '../constants'\nimport { WebchatContext } from '../contexts'\nimport { renderComponent } from '../util/react'\nimport { ButtonsDisabler } from './buttons-disabler'\n\nconst StyledButton = styled.button`\n  display: flex;\n  width: 100%;\n  max-height: 80px;\n  font-size: 14px;\n  text-align: center;\n  align-content: center;\n  justify-content: center;\n  padding: 12px 32px;\n  font-family: inherit;\n  border: none;\n  border: 1px solid ${COLORS.SEASHELL_WHITE};\n  cursor: pointer;\n  outline: 0;\n  border-top-right-radius: ${props => props.top || '0px'};\n  border-top-left-radius: ${props => props.top || '0px'};\n  border-bottom-right-radius: ${props => props.bottom || '0px'};\n  border-bottom-left-radius: ${props => props.bottom || '0px'};\n  overflow: hidden;\n`\n\nexport const Button = props => {\n  const {\n    webchatState,\n    openWebview,\n    sendPayload,\n    sendInput,\n    getThemeProperty,\n    updateMessage,\n  } = useContext(WebchatContext)\n  const [hover, setHover] = useState(false)\n  const { theme } = webchatState\n  const { autoDisable, disabledStyle } = ButtonsDisabler.resolveDisabling(\n    webchatState.theme,\n    props\n  )\n  const handleClick = event => {\n    event.preventDefault()\n    const type = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.buttonMessageType,\n      INPUT.TEXT\n    )\n    if (props.webview) openWebview(props.webview, props.params)\n    else if (props.path) {\n      type == INPUT.POSTBACK\n        ? sendPayload(`__PATH_PAYLOAD__${props.path}`)\n        : sendInput({\n            type: INPUT.TEXT,\n            data: String(props.children),\n            payload: `__PATH_PAYLOAD__${props.path}`,\n          })\n    } else if (props.payload) {\n      type == INPUT.POSTBACK\n        ? sendPayload(props.payload)\n        : sendInput({\n            type: INPUT.TEXT,\n            data: String(props.children),\n            payload: props.payload,\n          })\n    } else if (props.url) {\n      window.open(props.url, props.target || '_blank')\n    }\n    if (props.onClick) props.onClick()\n    if (props.setDisabled) {\n      props.setDisabled(true)\n      const messageToUpdate = webchatState.messagesJSON.filter(\n        m => m.id == props.parentId\n      )[0]\n      const updatedMsg = ButtonsDisabler.getUpdatedMessage(messageToUpdate, {\n        autoDisable,\n        disabledStyle,\n      })\n      updateMessage(updatedMsg)\n    }\n  }\n\n  const renderBrowser = () => {\n    const buttonStyle = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.buttonStyle)\n    const CustomButton = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.customButton\n    )\n    if (CustomButton) {\n      return (\n        <div onClick={e => handleClick(e)}>\n          <CustomButton>{props.children}</CustomButton>\n        </div>\n      )\n    }\n\n    const buttonBgColor = hover\n      ? getThemeProperty(\n          WEBCHAT.CUSTOM_PROPERTIES.buttonHoverBackground,\n          COLORS.CONCRETE_WHITE\n        )\n      : getThemeProperty(\n          WEBCHAT.CUSTOM_PROPERTIES.buttonStyleBackground,\n          COLORS.SOLID_WHITE\n        )\n    const buttonTextColor = hover\n      ? getThemeProperty(\n          WEBCHAT.CUSTOM_PROPERTIES.buttonHoverTextColor,\n          COLORS.SOLID_BLACK\n        )\n      : getThemeProperty(\n          WEBCHAT.CUSTOM_PROPERTIES.buttonStyleColor,\n          COLORS.SOLID_BLACK\n        )\n\n    return (\n      <StyledButton\n        theme={theme}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        onClick={e => handleClick(e)}\n        style={{\n          ...buttonStyle,\n          color: buttonTextColor,\n          backgroundColor: buttonBgColor,\n          ...(props.disabled && autoDisable && disabledStyle),\n        }}\n        bottom={props.bottomRadius}\n      >\n        {props.children}\n      </StyledButton>\n    )\n  }\n\n  const renderNode = () => {\n    const disabledProps = ButtonsDisabler.constructNodeProps(props)\n    if (props.webview) {\n      const Webview = props.webview\n      let params = ''\n      if (props.params) params = params2queryString(props.params)\n      return (\n        <button url={`/webviews/${Webview.name}?${params}`} {...disabledProps}>\n          {props.children}\n        </button>\n      )\n    } else if (props.path) {\n      const payload = `__PATH_PAYLOAD__${props.path}`\n      return (\n        <button payload={payload} {...disabledProps}>\n          {props.children}\n        </button>\n      )\n    } else if (props.payload) {\n      return (\n        <button payload={props.payload} {...disabledProps}>\n          {props.children}\n        </button>\n      )\n    } else if (props.url) {\n      return (\n        <button url={props.url} target={props.target} {...disabledProps}>\n          {props.children}\n        </button>\n      )\n    } else if (props.onClick) {\n      return null\n    }\n    throw new Error('Button missing payload, path, webviews, url or onClick')\n  }\n\n  return renderComponent({ renderBrowser, renderNode })\n}\n\nButton.serialize = buttonProps => {\n  let payload = buttonProps.payload\n  if (buttonProps.path) payload = `__PATH_PAYLOAD__${buttonProps.path}`\n  return {\n    button: {\n      payload,\n      url: buttonProps.url,\n      target: buttonProps.target,\n      webview: buttonProps.webview && String(buttonProps.webview),\n      title: buttonProps.children && String(buttonProps.children),\n      ...ButtonsDisabler.withDisabledProps(buttonProps),\n    },\n  }\n}\n"],"file":"button.js"}