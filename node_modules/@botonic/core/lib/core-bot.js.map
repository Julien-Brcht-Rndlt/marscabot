{"version":3,"sources":["../src/core-bot.js"],"names":["CoreBot","renderer","routes","locales","theme","plugins","appId","defaultTyping","defaultDelay","defaultRoutes","inspector","rootElement","Inspector","router","Router","routeInspector","stringID","session","__locale","locale","input","lastRoutePath","output","processInput","request","getString","stringId","setLocale","params","actions","action","retryAction","defaultAction","response","is_first_interaction"],"mappings":"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","sourcesContent":["import { Inspector } from './debug/inspector'\nimport { getString } from './i18n'\nimport { loadPlugins, runPlugins } from './plugins'\nimport { Router } from './router'\nimport { isFunction } from './utils'\n\nexport class CoreBot {\n  constructor({\n    renderer,\n    routes,\n    locales,\n    theme,\n    plugins,\n    appId,\n    defaultTyping,\n    defaultDelay,\n    defaultRoutes,\n    inspector,\n  }) {\n    this.renderer = renderer\n    this.plugins = loadPlugins(plugins)\n    this.theme = theme || {}\n    this.defaultTyping =\n      typeof defaultTyping !== 'undefined' ? defaultTyping : 0.6\n    this.defaultDelay = typeof defaultDelay !== 'undefined' ? defaultDelay : 0.4\n    this.locales = locales\n    if (appId) {\n      this.appId = appId\n      return\n    }\n    this.rootElement = null\n    this.inspector = inspector || new Inspector()\n    this.routes = routes\n    this.defaultRoutes = defaultRoutes || []\n    this.router = isFunction(this.routes)\n      ? null\n      : new Router(\n          [...this.routes, ...this.defaultRoutes],\n          this.inspector.routeInspector\n        )\n  }\n\n  getString(stringID, session) {\n    return getString(this.locales, session.__locale, stringID)\n  }\n\n  setLocale(locale, session) {\n    session.__locale = locale\n  }\n\n  async input({ input, session, lastRoutePath }) {\n    session = session || {}\n    if (!session.__locale) session.__locale = 'en'\n\n    if (this.plugins) {\n      await runPlugins(this.plugins, 'pre', input, session, lastRoutePath)\n    }\n\n    if (isFunction(this.routes)) {\n      this.router = new Router(\n        [\n          ...(await this.routes({ input, session, lastRoutePath })),\n          ...this.defaultRoutes,\n        ],\n        this.inspector.routeInspector\n      )\n    }\n\n    const output = this.router.processInput(input, session, lastRoutePath)\n\n    const request = {\n      getString: stringId => this.getString(stringId, session),\n      setLocale: locale => this.setLocale(locale, session),\n      session: session || {},\n      params: output.params || {},\n      input: input,\n      plugins: this.plugins,\n      defaultTyping: this.defaultTyping,\n      defaultDelay: this.defaultDelay,\n      lastRoutePath,\n    }\n\n    const actions = [output.action, output.retryAction, output.defaultAction]\n\n    const response = await this.renderer({ request, actions })\n\n    lastRoutePath = output.lastRoutePath\n\n    if (this.plugins) {\n      await runPlugins(\n        this.plugins,\n        'post',\n        input,\n        session,\n        lastRoutePath,\n        response\n      )\n    }\n\n    session.is_first_interaction = false\n    return { input, response, session, lastRoutePath }\n  }\n}\n"],"file":"core-bot.js"}