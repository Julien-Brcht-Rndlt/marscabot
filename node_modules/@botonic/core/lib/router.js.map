{"version":3,"sources":["../src/router.js"],"names":["Router","routes","routeInspector","undefined","RouteInspector","input","session","lastRoutePath","routeParams","payload","includes","pathParam","split","route","getRouteByPath","pathParams","getOnFinishParams","brokenFlow","lastRoute","path","childRoutes","getRoute","Object","keys","length","Boolean","searchParams","URLSearchParams","key","value","params","e","defaultAction","ignoreRetry","__retries","retry","action","retryAction","redirect","redirectRoute","notFound","NoMatchingRouteError","console","error","computedRoutes","find","r","entries","filter","some","match","matchRoute","groups","routeList","currentPath","childPath","join","prop","matcher","indexOf","type","data","matched","matchValue","routeMatched","routeNotMatched","RegExp","exec"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;IAEaA,M;AACX;AACF;AACA;AACA;AACE,kBAAYC,MAAZ,EAAgD;AAAA,QAA5BC,cAA4B,uEAAXC,SAAW;AAAA;AAC9C,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,cAAL,GAAsBA,cAAc,IAAI,IAAIE,yBAAJ,EAAxC;AACD,G,CAED;;;;;WACA,sBAAaC,KAAb,EAAwD;AAAA,UAApCC,OAAoC,uEAA1B,EAA0B;AAAA,UAAtBC,aAAsB,uEAAN,IAAM;AACtD,UAAIC,WAAW,GAAG,EAAlB;;AACA,UAAIH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACI,OAAN,CAAcC,QAAd,CAAuB,kBAAvB,CAArB,EAAiE;AAC/D,YAAMC,SAAS,GAAGN,KAAK,CAACI,OAAN,CAAcG,KAAd,CAAoB,kBAApB,CAAlB;AACAJ,QAAAA,WAAW,CAACK,KAAZ,GAAoB,KAAKC,cAAL,CAAoBH,SAAS,CAAC,CAAD,CAA7B,EAAkC,KAAKV,MAAvC,CAApB;AACD;;AACD,UAAMc,UAAU,GAAG,KAAKC,iBAAL,CAAuBX,KAAvB,CAAnB;AACA,UAAIY,UAAU,GAAG,KAAjB;AACA,UAAMC,SAAS,GAAG,KAAKJ,cAAL,CAAoBP,aAApB,EAAmC,KAAKN,MAAxC,CAAlB;AACA,UAAI,CAACiB,SAAD,IAAcb,KAAK,CAACc,IAAxB,EACEX,WAAW,CAACK,KAAZ,GAAoB,KAAKC,cAAL,CAAoBT,KAAK,CAACc,IAA1B,EAAgC,KAAKlB,MAArC,CAApB;AACF,UAAIiB,SAAS,IAAIA,SAAS,CAACE,WAAvB,IAAsC,CAACZ,WAAW,CAACK,KAAvD,EACE;AACAL,QAAAA,WAAW,GAAG,KAAKa,QAAL,CACZhB,KADY,EAEZa,SAAS,CAACE,WAFE,EAGZd,OAHY,EAIZC,aAJY,CAAd;;AAMF,UAAI,CAACC,WAAD,IAAgB,CAACc,MAAM,CAACC,IAAP,CAAYf,WAAZ,EAAyBgB,MAA9C,EAAsD;AACpD;AACN;AACA;AACA;AACMP,QAAAA,UAAU,GAAGQ,OAAO,CAAClB,aAAD,CAApB;AACAC,QAAAA,WAAW,GAAG,KAAKa,QAAL,CAAchB,KAAd,EAAqB,KAAKJ,MAA1B,EAAkCK,OAAlC,EAA2CC,aAA3C,CAAd;AACD;;AACD,UAAI;AACF,YAAIQ,UAAJ,EAAgB;AACd,cAAMW,YAAY,GAAG,IAAIC,eAAJ,CAAoBZ,UAApB,CAArB;;AADc,qDAEaW,YAFb;AAAA;;AAAA;AAEd,gEAAyC;AAAA;AAAA,kBAA7BE,GAA6B;AAAA,kBAAxBC,KAAwB;;AACvCrB,cAAAA,WAAW,CAACsB,MAAZ,GACKtB,WAAW,CAACsB,MAAZ,CAAmBF,GAAnB,IAA0BC,KAD/B,GAEKrB,WAAW,CAACsB,MAAZ,wCAAwBF,GAAxB,EAA8BC,KAA9B,CAFL;AAGD;AANa;AAAA;AAAA;AAAA;AAAA;AAOf;AACF,OATD,CASE,OAAOE,CAAP,EAAU,CAAE;;AACd,UAAIvB,WAAW,IAAIc,MAAM,CAACC,IAAP,CAAYf,WAAZ,EAAyBgB,MAA5C,EAAoD;AAClD;AACA,YAAIQ,aAAJ;;AACA,YAAIxB,WAAW,CAACK,KAAhB,EAAuB;AACrB,cACE,CAACL,WAAW,CAACK,KAAZ,CAAkBM,IAAnB,IACAX,WAAW,CAACK,KAAZ,CAAkBO,WADlB,IAEAZ,WAAW,CAACK,KAAZ,CAAkBO,WAAlB,CAA8BI,MAHhC,EAIE;AACAQ,YAAAA,aAAa,GAAG,KAAKX,QAAL,CACd;AAAEF,cAAAA,IAAI,EAAE;AAAR,aADc,EAEdX,WAAW,CAACK,KAAZ,CAAkBO,WAFJ,EAGdd,OAHc,EAIdC,aAJc,CAAhB;AAMD;;AACD,cAAI,YAAYC,WAAW,CAACK,KAA5B,EAAmC;AACjC,gBACEI,UAAU,IACVT,WAAW,CAACK,KAAZ,CAAkBoB,WAAlB,IAAiC,IADjC,IAEAf,SAFA,IAGA,CAACZ,OAAO,CAAC4B,SAAR,IAAqB,CAAtB,KAA4BhB,SAAS,CAACiB,KAAV,IAAmB,CAA/C,CAHA,IAIA3B,WAAW,CAACK,KAAZ,CAAkBM,IAAlB,IAA0BD,SAAS,CAACkB,MALtC,EAME;AACA9B,cAAAA,OAAO,CAAC4B,SAAR,GAAoB5B,OAAO,CAAC4B,SAAR,GAAoB5B,OAAO,CAAC4B,SAAR,GAAoB,CAAxC,GAA4C,CAAhE,CADA,CAEA;;AACA,qBAAO;AACLE,gBAAAA,MAAM,EAAE5B,WAAW,CAACK,KAAZ,CAAkBuB,MADrB;AAELN,gBAAAA,MAAM,EAAEtB,WAAW,CAACsB,MAFf;AAGLO,gBAAAA,WAAW,EAAEnB,SAAS,GAAGA,SAAS,CAACkB,MAAb,GAAsB,IAHvC;AAILJ,gBAAAA,aAAa,EAAEA,aAAa,GAAGA,aAAa,CAACnB,KAAd,CAAoBuB,MAAvB,GAAgC,IAJvD;AAKL7B,gBAAAA,aAAa,EAAEA;AALV,eAAP;AAOD,aAhBD,MAgBO;AACLD,cAAAA,OAAO,CAAC4B,SAAR,GAAoB,CAApB;AACA,kBAAI3B,aAAa,IAAI,CAACU,UAAtB,EACEV,aAAa,aAAMA,aAAN,cAAuBC,WAAW,CAACK,KAAZ,CAAkBM,IAAzC,CAAb,CADF,KAEKZ,aAAa,GAAGC,WAAW,CAACK,KAAZ,CAAkBM,IAAlC;AACL,qBAAO;AACLiB,gBAAAA,MAAM,EAAE5B,WAAW,CAACK,KAAZ,CAAkBuB,MADrB;AAELN,gBAAAA,MAAM,EAAEtB,WAAW,CAACsB,MAFf;AAGLO,gBAAAA,WAAW,EAAE,IAHR;AAILL,gBAAAA,aAAa,EAAEA,aAAa,GAAGA,aAAa,CAACnB,KAAd,CAAoBuB,MAAvB,GAAgC,IAJvD;AAKL7B,gBAAAA,aAAa,EAAEA;AALV,eAAP;AAOD;AACF,WA9BD,MA8BO,IAAIyB,aAAJ,EAAmB;AACxB,mBAAO;AACLI,cAAAA,MAAM,EAAEJ,aAAa,CAACnB,KAAd,CAAoBuB,MADvB;AAELN,cAAAA,MAAM,EAAEE,aAAa,CAACF,MAFjB;AAGLvB,cAAAA,aAAa,EAAEA;AAHV,aAAP;AAKD,WANM,MAMA,IAAI,cAAcC,WAAW,CAACK,KAA9B,EAAqC;AAC1CN,YAAAA,aAAa,GAAGC,WAAW,CAACK,KAAZ,CAAkByB,QAAlC;AACA,gBAAMC,aAAa,GAAG,KAAKzB,cAAL,CAAoBP,aAApB,EAAmC,KAAKN,MAAxC,CAAtB;;AACA,gBAAIsC,aAAJ,EAAmB;AACjB,qBAAO;AACLH,gBAAAA,MAAM,EAAEG,aAAa,CAACH,MADjB;AAELN,gBAAAA,MAAM,EAAES,aAAa,CAACT,MAFjB;AAGLvB,gBAAAA,aAAa,EAAEA;AAHV,eAAP;AAKD;AACF;AACF;AACF;;AACD,UAAMiC,QAAQ,GAAG,KAAK1B,cAAL,CAAoB,KAApB,EAA2B,KAAKb,MAAhC,CAAjB;AACA,UAAI,CAACuC,QAAL,EAAe,MAAM,IAAIC,4BAAJ,CAAyBpC,KAAzB,CAAN;;AACf,UAAIa,SAAS,IAAI,CAACZ,OAAO,CAAC4B,SAAR,IAAqB,CAAtB,KAA4BhB,SAAS,CAACiB,KAAV,IAAmB,CAA/C,CAAjB,EAAoE;AAClE7B,QAAAA,OAAO,CAAC4B,SAAR,GAAoB5B,OAAO,CAAC4B,SAAR,GAAoB5B,OAAO,CAAC4B,SAAR,GAAoB,CAAxC,GAA4C,CAAhE;AACA,eAAO;AACLE,UAAAA,MAAM,EAAEI,QAAQ,CAACJ,MADZ;AAELN,UAAAA,MAAM,EAAE,EAFH;AAGLO,UAAAA,WAAW,EAAEnB,SAAS,CAACkB,MAHlB;AAIL7B,UAAAA,aAAa,EAAEA;AAJV,SAAP;AAMD,OARD,MAQO;AACL,aAAKA,aAAL,GAAqB,IAArB;AACAD,QAAAA,OAAO,CAAC4B,SAAR,GAAoB,CAApB;AACA,eAAO;AACLE,UAAAA,MAAM,EAAEI,QAAQ,CAACJ,MADZ;AAELN,UAAAA,MAAM,EAAE,EAFH;AAGLO,UAAAA,WAAW,EAAE,IAHR;AAIL9B,UAAAA,aAAa,EAAEA;AAJV,SAAP;AAMD;AACF;AAED;AACF;AACA;AACA;;;;WACE,2BAAkBF,KAAlB,EAAyB;AACvB,UAAI;AACF,YAAI,CAACA,KAAK,CAACI,OAAX,EAAoB;AAClB,iBAAON,SAAP;AACD;;AACD,YAAM2B,MAAM,GAAGzB,KAAK,CAACI,OAAN,CAAcG,KAAd,CAAoB,kBAApB,CAAf;;AACA,YAAIkB,MAAM,CAACN,MAAP,GAAgB,CAApB,EAAuB;AACrB,iBAAOrB,SAAP;AACD;;AACD,YAAMY,UAAU,GAAGe,MAAM,CAAC,CAAD,CAAN,CAAUlB,KAAV,CAAgB,GAAhB,CAAnB;;AACA,YAAIG,UAAU,CAACS,MAAX,GAAoB,CAAxB,EAA2B;AACzBnB,UAAAA,KAAK,CAACc,IAAN,GAAaJ,UAAU,CAAC,CAAD,CAAvB;AACA,iBAAOV,KAAK,CAACI,OAAb;AACD;;AACD,YAAIM,UAAU,CAACS,MAAX,GAAoB,CAAxB,EAA2B;AACzB,iBAAOT,UAAU,CAAC,CAAD,CAAjB;AACD;AACF,OAhBD,CAgBE,OAAOgB,CAAP,EAAU;AACVW,QAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyCZ,CAAzC;AACD;;AACD,aAAO5B,SAAP;AACD;AAED;AACF;AACA;;;;WACE,kBAASE,KAAT,EAAgBJ,MAAhB,EAAwBK,OAAxB,EAAiCC,aAAjC,EAAgD;AAAA;;AAC9C,UAAMqC,cAAc,GAAG,uBAAW3C,MAAX,IACnBA,MAAM,CAAC;AAAEI,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,OAAO,EAAPA,OAAT;AAAkBC,QAAAA,aAAa,EAAbA;AAAlB,OAAD,CADa,GAEnBN,MAFJ;AAGA;AACJ;;AACI;;AACA,UAAI6B,MAAM,GAAG,EAAb;AACA,UAAMjB,KAAK,GAAG+B,cAAc,CAACC,IAAf,CAAoB,UAAAC,CAAC;AAAA,eACjCxB,MAAM,CAACyB,OAAP,CAAeD,CAAf,EACGE,MADH,CACU;AAAA;AAAA,cAAEpB,GAAF;;AAAA;AAAA,iBAAeA,GAAG,IAAI,QAAP,IAAmBA,GAAG,IAAI,aAAzC;AAAA,SADV,EAEGqB,IAFH,CAEQ,iBAAkB;AAAA;AAAA,cAAhBrB,GAAgB;AAAA,cAAXC,KAAW;;AACtB,cAAMqB,KAAK,GAAG,KAAI,CAACC,UAAL,CACZL,CADY,EAEZlB,GAFY,EAGZC,KAHY,EAIZxB,KAJY,EAKZC,OALY,EAMZC,aANY,CAAd;;AAQA,cAAI;AACFuB,YAAAA,MAAM,GAAGoB,KAAK,CAACE,MAAf;AACD,WAFD,CAEE,OAAOrB,CAAP,EAAU,CAAE;;AACd,iBAAON,OAAO,CAACyB,KAAD,CAAd;AACD,SAfH,CADiC;AAAA,OAArB,CAAd;;AAkBA,UAAIrC,KAAJ,EAAW;AACT,eAAO;AAAEA,UAAAA,KAAK,EAALA,KAAF;AAASiB,UAAAA,MAAM,EAANA;AAAT,SAAP;AACD;;AACD,aAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,wBAAeX,IAAf,EAAuC;AAAA,UAAlBkC,SAAkB,uEAAN,IAAM;AACrC,UAAI,CAAClC,IAAL,EAAW,OAAO,IAAP;AACX,UAAIN,KAAK,GAAG,IAAZ;AACAwC,MAAAA,SAAS,GAAGA,SAAS,IAAI,KAAKpD,MAA9B;;AAHqC,wBAIDkB,IAAI,CAACP,KAAL,CAAW,GAAX,CAJC;AAAA;AAAA,UAI9B0C,WAJ8B;AAAA,UAIdC,SAJc;;AAAA,kDAKrBF,SALqB;AAAA;;AAAA;AAKrC,+DAA2B;AAAA,cAAhBP,CAAgB;;AACzB;AACA,cAAIA,CAAC,CAAC3B,IAAF,IAAUmC,WAAd,EAA2B;AACzBzC,YAAAA,KAAK,GAAGiC,CAAR;;AACA,gBAAIA,CAAC,CAAC1B,WAAF,IAAiB0B,CAAC,CAAC1B,WAAF,CAAcI,MAA/B,IAAyC+B,SAAS,CAAC/B,MAAV,GAAmB,CAAhE,EAAmE;AACjE;AACAX,cAAAA,KAAK,GAAG,KAAKC,cAAL,CAAoByC,SAAS,CAACC,IAAV,CAAe,GAAf,CAApB,EAAyCV,CAAC,CAAC1B,WAA3C,CAAR;AACA,kBAAIP,KAAJ,EAAW,OAAOA,KAAP;AACZ,aAJD,MAIO,IAAI0C,SAAS,CAAC/B,MAAV,KAAqB,CAAzB,EAA4B,OAAOX,KAAP,CANV,CAMuB;;AACjD;AACF;AAfoC;AAAA;AAAA;AAAA;AAAA;;AAgBrC,aAAO,IAAP;AACD;AAED;AACF;AACA;;;;WACE,oBAAWA,KAAX,EAAkB4C,IAAlB,EAAwBC,OAAxB,EAAiCrD,KAAjC,EAAwCC,OAAxC,EAAiDC,aAAjD,EAAgE;AAC9D;AACJ;AACA;AACA;AACA;;AACI;AACA,UAAIsB,KAAK,GAAG,EAAZ;AACA,UAAIP,MAAM,CAACC,IAAP,CAAYlB,KAAZ,EAAmBsD,OAAnB,CAA2BF,IAA3B,IAAmC,CAAC,CAAxC,EAA2C5B,KAAK,GAAGxB,KAAK,CAACoD,IAAD,CAAb;;AAC3C,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,YAAIpD,KAAK,CAACuD,IAAN,KAAe,MAAnB,EAA2B/B,KAAK,GAAGxB,KAAK,CAACwD,IAAd;AAC5B,OAFD,MAEO,IAAIJ,IAAI,KAAK,OAAb,EAAsB5B,KAAK,GAAGxB,KAAR,CAAtB,KACF,IAAIoD,IAAI,KAAK,SAAb,EAAwB5B,KAAK,GAAGvB,OAAR,CAAxB,KACA,IAAImD,IAAI,KAAK,SAAb,EAAwB5B,KAAK,GAAG;AAAExB,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,OAAO,EAAPA,OAAT;AAAkBC,QAAAA,aAAa,EAAbA;AAAlB,OAAR;;AAC7B,UAAMuD,OAAO,GAAG,KAAKC,UAAL,CAAgBL,OAAhB,EAAyB7B,KAAzB,CAAhB;;AACA,UAAIiC,OAAJ,EAAa;AACX,aAAK5D,cAAL,CAAoB8D,YAApB,CAAiCnD,KAAjC,EAAwC4C,IAAxC,EAA8CC,OAA9C,EAAuD7B,KAAvD;AACD,OAFD,MAEO;AACL,aAAK3B,cAAL,CAAoB+D,eAApB,CAAoCpD,KAApC,EAA2C4C,IAA3C,EAAiDC,OAAjD,EAA0D7B,KAA1D;AACD;;AACD,aAAOiC,OAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,oBAAWJ,OAAX,EAAoB7B,KAApB,EAA2B;AACzB,UAAI,OAAO6B,OAAP,KAAmB,QAAvB,EAAiC;AAC/B;AACA,eAAO7B,KAAK,IAAI6B,OAAhB;AACD;;AACD,UAAIA,OAAO,YAAYQ,MAAvB,EAA+B;AAC7B;AACA,YAAIrC,KAAK,KAAK1B,SAAd,EAAyB;AACvB,iBAAO,KAAP;AACD;;AACD,eAAOuD,OAAO,CAACS,IAAR,CAAatC,KAAb,CAAP;AACD;;AACD,UAAI,OAAO6B,OAAP,KAAmB,UAAvB,EAAmC;AACjC,eAAOA,OAAO,CAAC7B,KAAD,CAAd;AACD;;AACD,aAAO,KAAP;AACD","sourcesContent":["import { Input, Params, Route } from './'\nimport { RouteInspector } from './debug/inspector'\nimport { NoMatchingRouteError } from './errors'\nimport { isFunction } from './utils'\n\nexport class Router {\n  /**\n   * @param {Route[]} routes\n   * @param routeInspector\n   */\n  constructor(routes, routeInspector = undefined) {\n    this.routes = routes\n    this.routeInspector = routeInspector || new RouteInspector()\n  }\n\n  // eslint-disable-next-line complexity\n  processInput(input, session = {}, lastRoutePath = null) {\n    let routeParams = {}\n    if (input.payload && input.payload.includes('__PATH_PAYLOAD__')) {\n      const pathParam = input.payload.split('__PATH_PAYLOAD__')\n      routeParams.route = this.getRouteByPath(pathParam[1], this.routes)\n    }\n    const pathParams = this.getOnFinishParams(input)\n    let brokenFlow = false\n    const lastRoute = this.getRouteByPath(lastRoutePath, this.routes)\n    if (!lastRoute && input.path)\n      routeParams.route = this.getRouteByPath(input.path, this.routes)\n    if (lastRoute && lastRoute.childRoutes && !routeParams.route)\n      //get route depending of current ChildRoute\n      routeParams = this.getRoute(\n        input,\n        lastRoute.childRoutes,\n        session,\n        lastRoutePath\n      )\n    if (!routeParams || !Object.keys(routeParams).length) {\n      /*\n          we couldn't find a route in the state of the lastRoute, so let's find in\n          the general conf.route\n        */\n      brokenFlow = Boolean(lastRoutePath)\n      routeParams = this.getRoute(input, this.routes, session, lastRoutePath)\n    }\n    try {\n      if (pathParams) {\n        const searchParams = new URLSearchParams(pathParams)\n        for (const [key, value] of searchParams) {\n          routeParams.params\n            ? (routeParams.params[key] = value)\n            : (routeParams.params = { [key]: value })\n        }\n      }\n    } catch (e) {}\n    if (routeParams && Object.keys(routeParams).length) {\n      //get in childRoute if one has path ''\n      let defaultAction\n      if (routeParams.route) {\n        if (\n          !routeParams.route.path &&\n          routeParams.route.childRoutes &&\n          routeParams.route.childRoutes.length\n        ) {\n          defaultAction = this.getRoute(\n            { path: '' },\n            routeParams.route.childRoutes,\n            session,\n            lastRoutePath\n          )\n        }\n        if ('action' in routeParams.route) {\n          if (\n            brokenFlow &&\n            routeParams.route.ignoreRetry != true &&\n            lastRoute &&\n            (session.__retries || 0) < (lastRoute.retry || 0) &&\n            routeParams.route.path != lastRoute.action\n          ) {\n            session.__retries = session.__retries ? session.__retries + 1 : 1\n            // The flow was broken, but we want to recover it\n            return {\n              action: routeParams.route.action,\n              params: routeParams.params,\n              retryAction: lastRoute ? lastRoute.action : null,\n              defaultAction: defaultAction ? defaultAction.route.action : null,\n              lastRoutePath: lastRoutePath,\n            }\n          } else {\n            session.__retries = 0\n            if (lastRoutePath && !brokenFlow)\n              lastRoutePath = `${lastRoutePath}/${routeParams.route.path}`\n            else lastRoutePath = routeParams.route.path\n            return {\n              action: routeParams.route.action,\n              params: routeParams.params,\n              retryAction: null,\n              defaultAction: defaultAction ? defaultAction.route.action : null,\n              lastRoutePath: lastRoutePath,\n            }\n          }\n        } else if (defaultAction) {\n          return {\n            action: defaultAction.route.action,\n            params: defaultAction.params,\n            lastRoutePath: lastRoutePath,\n          }\n        } else if ('redirect' in routeParams.route) {\n          lastRoutePath = routeParams.route.redirect\n          const redirectRoute = this.getRouteByPath(lastRoutePath, this.routes)\n          if (redirectRoute) {\n            return {\n              action: redirectRoute.action,\n              params: redirectRoute.params,\n              lastRoutePath: lastRoutePath,\n            }\n          }\n        }\n      }\n    }\n    const notFound = this.getRouteByPath('404', this.routes)\n    if (!notFound) throw new NoMatchingRouteError(input)\n    if (lastRoute && (session.__retries || 0) < (lastRoute.retry || 0)) {\n      session.__retries = session.__retries ? session.__retries + 1 : 1\n      return {\n        action: notFound.action,\n        params: {},\n        retryAction: lastRoute.action,\n        lastRoutePath: lastRoutePath,\n      }\n    } else {\n      this.lastRoutePath = null\n      session.__retries = 0\n      return {\n        action: notFound.action,\n        params: {},\n        retryAction: null,\n        lastRoutePath: lastRoutePath,\n      }\n    }\n  }\n\n  /**\n   * @param {Input} input\n   * @return {string|undefined}\n   */\n  getOnFinishParams(input) {\n    try {\n      if (!input.payload) {\n        return undefined\n      }\n      const params = input.payload.split('__PATH_PAYLOAD__')\n      if (params.length < 2) {\n        return undefined\n      }\n      const pathParams = params[1].split('?')\n      if (pathParams.length > 0) {\n        input.path = pathParams[0]\n        delete input.payload\n      }\n      if (pathParams.length > 1) {\n        return pathParams[1]\n      }\n    } catch (e) {\n      console.error('ERROR getOnFinishParams', e)\n    }\n    return undefined\n  }\n\n  /**\n   * @return {null|RouteParams}\n   */\n  getRoute(input, routes, session, lastRoutePath) {\n    const computedRoutes = isFunction(routes)\n      ? routes({ input, session, lastRoutePath })\n      : routes\n    /* Find the route that matches the given input, if it match with some of the entries,\n      return the whole Route of the entry with optional params captured if matcher was a regex */\n    /** @type {{ [key: string]: string }}*/\n    let params = {}\n    const route = computedRoutes.find(r =>\n      Object.entries(r)\n        .filter(([key, {}]) => key != 'action' && key != 'childRoutes')\n        .some(([key, value]) => {\n          const match = this.matchRoute(\n            r,\n            key,\n            value,\n            input,\n            session,\n            lastRoutePath\n          )\n          try {\n            params = match.groups\n          } catch (e) {}\n          return Boolean(match)\n        })\n    )\n    if (route) {\n      return { route, params }\n    }\n    return null\n  }\n\n  /**\n   * @param {string|null} path\n   * @param {Route[]?} routeList\n   * @return {null|Route}\n   */\n  getRouteByPath(path, routeList = null) {\n    if (!path) return null\n    let route = null\n    routeList = routeList || this.routes\n    const [currentPath, ...childPath] = path.split('/')\n    for (const r of routeList) {\n      //iterate over all routeList\n      if (r.path == currentPath) {\n        route = r\n        if (r.childRoutes && r.childRoutes.length && childPath.length > 0) {\n          //evaluate childroute over next actions\n          route = this.getRouteByPath(childPath.join('/'), r.childRoutes)\n          if (route) return route\n        } else if (childPath.length === 0) return route //last action and found route\n      }\n    }\n    return null\n  }\n\n  /**\n   * @return {Params|boolean}\n   */\n  matchRoute(route, prop, matcher, input, session, lastRoutePath) {\n    /*\n        prop: ('text' | 'payload' | 'intent' | 'type' | 'input' | 'session' | 'request' ...)\n        matcher: (string: exact match | regex: regular expression match | function: return true)\n        input: user input object, ex: {type: 'text', data: 'Hi'}\n      */\n    /** @type {any} */\n    let value = ''\n    if (Object.keys(input).indexOf(prop) > -1) value = input[prop]\n    if (prop === 'text') {\n      if (input.type === 'text') value = input.data\n    } else if (prop === 'input') value = input\n    else if (prop === 'session') value = session\n    else if (prop === 'request') value = { input, session, lastRoutePath }\n    const matched = this.matchValue(matcher, value)\n    if (matched) {\n      this.routeInspector.routeMatched(route, prop, matcher, value)\n    } else {\n      this.routeInspector.routeNotMatched(route, prop, matcher, value)\n    }\n    return matched\n  }\n\n  /**\n   *\n   * @return {*|boolean|Params}\n   */\n  matchValue(matcher, value) {\n    if (typeof matcher === 'string') {\n      // TODO should this be === to avoid matching '' with undefined?\n      return value == matcher\n    }\n    if (matcher instanceof RegExp) {\n      // check if undefined to avoid conversion to 'undefined'\n      if (value === undefined) {\n        return false\n      }\n      return matcher.exec(value)\n    }\n    if (typeof matcher === 'function') {\n      return matcher(value)\n    }\n    return false\n  }\n}\n"],"file":"router.js"}