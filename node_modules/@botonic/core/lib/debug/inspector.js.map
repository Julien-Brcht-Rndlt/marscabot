{"version":3,"sources":["../../src/debug/inspector.js"],"names":["RouteInspector","route","routeKey","routeValue","input","inputValue","FocusRouteInspector","focusRoutePaths","focusOnMatches","includes","path","LogRouteInspector","_isOnFocus","_log","_routeName","obj","name","action","redirect","message","optionalParams","console","log","Inspector","routeInspector","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;IAAaA,c;;;;;;;WACX,sBAAaC,KAAb,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,KAA1C,EAAiD,CAAE;;;WACnD,yBAAgBH,KAAhB,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CE,UAA7C,EAAyD,CAAE;;;;;;;IAGhDC,mB;;;;;AACX,iCAAc;AAAA;;AAAA;AACZ;AACA,UAAKC,eAAL,GAAuB,IAAvB;AACA,UAAKC,cAAL,GAAsB,KAAtB;AAHY;AAIb;;;;WAED,2BAAkBD,eAAlB,EAAmC;AACjC,WAAKA,eAAL,GAAuBA,eAAvB;AACA,aAAO,IAAP;AACD;;;WAED,8BAAqB;AACnB,WAAKC,cAAL,GAAsB,IAAtB;AACA,aAAO,IAAP;AACD;;;WAED,oBAAWP,KAAX,EAAkB;AAChB,UAAI,KAAKM,eAAL,IAAwB,IAA5B,EAAkC;AAChC,eAAO,IAAP;AACD;;AACD,aAAO,KAAKA,eAAL,CAAqBE,QAArB,CAA8BR,KAAK,CAACS,IAApC,CAAP;AACD;;;EAtBsCV,c;;;;IAyB5BW,iB;;;;;;;;;;;;WACX,sBAAaV,KAAb,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CE,UAA1C,EAAsD;AACpD,UAAI,CAAC,KAAKO,UAAL,CAAgBX,KAAhB,CAAL,EAA6B;AAC3B;AACD;;AACD,WAAKY,IAAL,CACE,gBAAS,KAAKC,UAAL,CAAgBb,KAAhB,CAAT,0CACmBC,QADnB,eACgCG,UADhC,wBACwDF,UADxD,MADF;AAID;;;WAED,yBAAgBF,KAAhB,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CE,UAA7C,EAAyD;AACvD,UAAI,CAAC,KAAKO,UAAL,CAAgBX,KAAhB,CAAD,IAA2B,KAAKO,cAApC,EAAoD;AAClD;AACD;;AACD,WAAKK,IAAL,CACE,gBAAS,KAAKC,UAAL,CAAgBb,KAAhB,CAAT,8CACmBC,QADnB,eACgCG,UADhC,8BAC8DF,UAD9D,MADF;AAID;;;WAED,oBAAWY,GAAX,EAAgB;AACd,UAAIC,IAAI,GAAGD,GAAG,CAACL,IAAJ,IAAY,qBAAvB;;AACA,UAAIK,GAAG,CAACE,MAAR,EAAgB;AACdD,QAAAA,IAAI,cAAOA,IAAP,2BAA4BD,GAAG,CAACE,MAAJ,CAAWD,IAAvC,OAAJ;AACD;;AACD,UAAID,GAAG,CAACG,QAAR,EAAkB;AAChBF,QAAAA,IAAI,cAAOA,IAAP,kCAAmCD,GAAG,CAACG,QAAvC,OAAJ;AACD;;AAED,aAAOF,IAAP;AACD;;;WAED,cAAKG,OAAL,EAAiC;AAAA;;AAAA,wCAAhBC,cAAgB;AAAhBA,QAAAA,cAAgB;AAAA;;AAC/B,kBAAAC,OAAO,EAACC,GAAR,kBAAYH,OAAZ,SAAwBC,cAAxB;AACD;;;EAnCoCd,mB;;;;IAsC1BiB,S;AACX,uBAAwC;AAAA,QAA5BC,cAA4B,uEAAXC,SAAW;AAAA;AACtC,SAAKD,cAAL,GAAsBA,cAAc,IAAI,IAAIxB,cAAJ,EAAxC;AACD;;;;WAED,6BAAoB;AAClB,aAAO,KAAKwB,cAAZ;AACD","sourcesContent":["export class RouteInspector {\n  routeMatched(route, routeKey, routeValue, input) {}\n  routeNotMatched(route, routeKey, routeValue, inputValue) {}\n}\n\nexport class FocusRouteInspector extends RouteInspector {\n  constructor() {\n    super()\n    this.focusRoutePaths = null\n    this.focusOnMatches = false\n  }\n\n  focusOnlyOnRoutes(focusRoutePaths) {\n    this.focusRoutePaths = focusRoutePaths\n    return this\n  }\n\n  focusOnlyOnMatches() {\n    this.focusOnMatches = true\n    return this\n  }\n\n  _isOnFocus(route) {\n    if (this.focusRoutePaths == null) {\n      return true\n    }\n    return this.focusRoutePaths.includes(route.path)\n  }\n}\n\nexport class LogRouteInspector extends FocusRouteInspector {\n  routeMatched(route, routeKey, routeValue, inputValue) {\n    if (!this._isOnFocus(route)) {\n      return\n    }\n    this._log(\n      `Route ${this._routeName(route)} selected ` +\n        `because Input.${routeKey} (${inputValue}) matched '${routeValue}'`\n    )\n  }\n\n  routeNotMatched(route, routeKey, routeValue, inputValue) {\n    if (!this._isOnFocus(route) || this.focusOnMatches) {\n      return\n    }\n    this._log(\n      `Route ${this._routeName(route)} not selected ` +\n        `because Input.${routeKey} (${inputValue}) did not match '${routeValue}'`\n    )\n  }\n\n  _routeName(obj) {\n    let name = obj.path || '<<no path defined>>'\n    if (obj.action) {\n      name = `'${name}' (to action '${obj.action.name}')`\n    }\n    if (obj.redirect) {\n      name = `'${name}' (with redirect to '${obj.redirect}')`\n    }\n\n    return name\n  }\n\n  _log(message, ...optionalParams) {\n    console.log(message, ...optionalParams)\n  }\n}\n\nexport class Inspector {\n  constructor(routeInspector = undefined) {\n    this.routeInspector = routeInspector || new RouteInspector()\n  }\n\n  getRouteInspector() {\n    return this.routeInspector\n  }\n}\n"],"file":"inspector.js"}