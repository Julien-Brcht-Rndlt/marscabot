"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOpenQueues = getOpenQueues;
exports.humanHandOff = humanHandOff;
exports.storeCaseRating = storeCaseRating;
exports.getAvailableAgentsByQueue = getAvailableAgentsByQueue;
exports.getAvailableAgents = getAvailableAgents;
exports.getAgentVacationRanges = getAgentVacationRanges;
exports.cancelHandoff = cancelHandoff;
exports.deleteUser = deleteUser;
exports.HandOffBuilder = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _axios = _interopRequireDefault(require("axios"));

var HUBTYPE_API_URL = 'https://api.hubtype.com';

function getOpenQueues(_x) {
  return _getOpenQueues.apply(this, arguments);
}

function _getOpenQueues() {
  _getOpenQueues = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(session) {
    var baseUrl, endpointUrl, resp;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            baseUrl = session._hubtype_api || HUBTYPE_API_URL;
            endpointUrl = "".concat(baseUrl, "/v1/queues/get_open_queues/");
            _context2.next = 4;
            return (0, _axios["default"])({
              headers: {
                Authorization: "Bearer ".concat(session._access_token)
              },
              method: 'post',
              url: endpointUrl,
              data: {
                bot_id: session.bot.id
              }
            });

          case 4:
            resp = _context2.sent;
            return _context2.abrupt("return", resp.data);

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _getOpenQueues.apply(this, arguments);
}

var HandOffBuilder = /*#__PURE__*/function () {
  function HandOffBuilder(session) {
    (0, _classCallCheck2["default"])(this, HandOffBuilder);
    this._session = session;
  }

  (0, _createClass2["default"])(HandOffBuilder, [{
    key: "withQueue",
    value: function withQueue(queueNameOrId) {
      this._queue = queueNameOrId;
      return this;
    }
  }, {
    key: "withOnFinishPayload",
    value: function withOnFinishPayload(payload) {
      this._onFinish = payload;
      return this;
    }
  }, {
    key: "withOnFinishPath",
    value: function withOnFinishPath(path) {
      this._onFinish = "__PATH_PAYLOAD__".concat(path);
      return this;
    }
  }, {
    key: "withAgentEmail",
    value: function withAgentEmail(email) {
      this._email = email;
      return this;
    }
  }, {
    key: "withAgentId",
    value: function withAgentId(agentId) {
      this._agentId = agentId;
      return this;
    }
  }, {
    key: "withNote",
    value: function withNote(note) {
      this._note = note;
      return this;
    }
  }, {
    key: "withCaseInfo",
    value: function withCaseInfo(caseInfo) {
      this._caseInfo = caseInfo;
      return this;
    }
  }, {
    key: "withShadowing",
    value: function withShadowing() {
      var shadowing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._shadowing = shadowing;
      return this;
    }
  }, {
    key: "handOff",
    value: function () {
      var _handOff = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", _humanHandOff(this._session, this._queue, this._onFinish, this._email, this._agentId, this._caseInfo, this._note, this._shadowing));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function handOff() {
        return _handOff.apply(this, arguments);
      }

      return handOff;
    }()
  }]);
  return HandOffBuilder;
}();
/**
 * @deprecated use {@link HandOffBuilder} class instead
 */


exports.HandOffBuilder = HandOffBuilder;

function humanHandOff(_x2) {
  return _humanHandOff2.apply(this, arguments);
}

function _humanHandOff2() {
  _humanHandOff2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(session) {
    var queueNameOrId,
        onFinish,
        builder,
        _args3 = arguments;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            queueNameOrId = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : '';
            onFinish = _args3.length > 2 ? _args3[2] : undefined;
            builder = new HandOffBuilder(session);

            if (queueNameOrId) {
              builder.withQueue(queueNameOrId);
            }

            if (!onFinish) {
              _context3.next = 14;
              break;
            }

            if (!onFinish.path) {
              _context3.next = 9;
              break;
            }

            builder.withOnFinishPath(onFinish.path);
            _context3.next = 14;
            break;

          case 9:
            if (!onFinish.payload) {
              _context3.next = 13;
              break;
            }

            builder.withOnFinishPayload(onFinish.payload);
            _context3.next = 14;
            break;

          case 13:
            throw new Error('onFinish requires payload or path field');

          case 14:
            return _context3.abrupt("return", builder.handOff());

          case 15:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _humanHandOff2.apply(this, arguments);
}

function _humanHandOff(_x3) {
  return _humanHandOff3.apply(this, arguments);
}

function _humanHandOff3() {
  _humanHandOff3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(session) {
    var queueNameOrId,
        onFinish,
        agentEmail,
        agentId,
        caseInfo,
        note,
        shadowing,
        params,
        _args4 = arguments;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            queueNameOrId = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : '';
            onFinish = _args4.length > 2 ? _args4[2] : undefined;
            agentEmail = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : '';
            agentId = _args4.length > 4 && _args4[4] !== undefined ? _args4[4] : '';
            caseInfo = _args4.length > 5 && _args4[5] !== undefined ? _args4[5] : '';
            note = _args4.length > 6 && _args4[6] !== undefined ? _args4[6] : '';
            shadowing = _args4.length > 7 && _args4[7] !== undefined ? _args4[7] : false;
            params = {};

            if (queueNameOrId) {
              params.queue = queueNameOrId;
            }

            if (agentEmail) {
              params.agent_email = agentEmail;
            }

            if (agentId) {
              params.agent_id = agentId;
            }

            if (caseInfo) {
              params.case_info = caseInfo;
            }

            if (note) {
              params.note = note;
            }

            if (shadowing) {
              params.shadowing = shadowing;
            }

            if (onFinish) {
              params.on_finish = onFinish;
            }

            session._botonic_action = "create_case:".concat(JSON.stringify(params));

          case 16:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _humanHandOff3.apply(this, arguments);
}

function storeCaseRating(_x4, _x5) {
  return _storeCaseRating.apply(this, arguments);
}

function _storeCaseRating() {
  _storeCaseRating = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(session, rating) {
    var baseUrl, chatId, resp;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            baseUrl = session._hubtype_api || HUBTYPE_API_URL;
            chatId = session.user.id;
            _context5.next = 4;
            return (0, _axios["default"])({
              headers: {
                Authorization: "Bearer ".concat(session._access_token)
              },
              method: 'post',
              url: "".concat(baseUrl, "/v1/chats/").concat(chatId, "/store_case_rating/"),
              data: {
                chat_id: chatId,
                rating: rating
              }
            });

          case 4:
            resp = _context5.sent;
            return _context5.abrupt("return", resp.data);

          case 6:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _storeCaseRating.apply(this, arguments);
}

function getAvailableAgentsByQueue(_x6, _x7) {
  return _getAvailableAgentsByQueue.apply(this, arguments);
}

function _getAvailableAgentsByQueue() {
  _getAvailableAgentsByQueue = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee6(session, queueId) {
    var baseUrl, resp;
    return _regenerator["default"].wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            baseUrl = session._hubtype_api || HUBTYPE_API_URL;
            _context6.next = 3;
            return (0, _axios["default"])({
              headers: {
                Authorization: "Bearer ".concat(session._access_token)
              },
              method: 'post',
              url: "".concat(baseUrl, "/v1/queues/").concat(queueId, "/get_available_agents/")
            });

          case 3:
            resp = _context6.sent;
            return _context6.abrupt("return", resp.data);

          case 5:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _getAvailableAgentsByQueue.apply(this, arguments);
}

function getAvailableAgents(_x8) {
  return _getAvailableAgents.apply(this, arguments);
}

function _getAvailableAgents() {
  _getAvailableAgents = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee7(session) {
    var baseUrl, botId, resp;
    return _regenerator["default"].wrap(function _callee7$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            baseUrl = session._hubtype_api || HUBTYPE_API_URL;
            botId = session.bot.id;
            _context7.next = 4;
            return (0, _axios["default"])({
              headers: {
                Authorization: "Bearer ".concat(session._access_token)
              },
              method: 'post',
              url: "".concat(baseUrl, "/v1/bots/").concat(botId, "/get_agents/")
            });

          case 4:
            resp = _context7.sent;
            return _context7.abrupt("return", resp.data);

          case 6:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee7);
  }));
  return _getAvailableAgents.apply(this, arguments);
}

function getAgentVacationRanges(_x9, _x10) {
  return _getAgentVacationRanges.apply(this, arguments);
}

function _getAgentVacationRanges() {
  _getAgentVacationRanges = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee8(session, _ref) {
    var agentId, agentEmail, baseUrl, botId, resp;
    return _regenerator["default"].wrap(function _callee8$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            agentId = _ref.agentId, agentEmail = _ref.agentEmail;
            baseUrl = session._hubtype_api || HUBTYPE_API_URL;
            botId = session.bot.id;
            _context8.next = 5;
            return (0, _axios["default"])({
              headers: {
                Authorization: "Bearer ".concat(session._access_token)
              },
              method: 'get',
              url: "".concat(baseUrl, "/v1/bots/").concat(botId, "/get_agent_vacation_ranges/"),
              params: {
                agent_id: agentId,
                agent_email: agentEmail
              }
            });

          case 5:
            resp = _context8.sent;
            return _context8.abrupt("return", resp.data);

          case 7:
          case "end":
            return _context8.stop();
        }
      }
    }, _callee8);
  }));
  return _getAgentVacationRanges.apply(this, arguments);
}

function cancelHandoff(session) {
  var typification = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var action = 'discard_case';
  if (typification) action = "".concat(action, ":").concat(JSON.stringify({
    typification: typification
  }));
  session._botonic_action = action;
}

function deleteUser(session) {
  session._botonic_action = "delete_user";
}
//# sourceMappingURL=handoff.js.map