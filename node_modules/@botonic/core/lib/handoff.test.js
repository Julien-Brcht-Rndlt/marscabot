"use strict";

var _handoff = require("./handoff");

describe('handOff', function () {
  test.each([["create_case:{\n        \"queue\":\"q1\",\n        \"on_finish\":\"payload1\"\n       }", 'q1', {
    payload: 'payload1'
  }], ["create_case:{\n        \"on_finish\":\"__PATH_PAYLOAD__path1\"\n       }", '', {
    path: 'path1'
  }]])('humanHandOff', function (expected, queue, onFinish) {
    var session = {};
    (0, _handoff.humanHandOff)(session, queue, onFinish);
    expect(session._botonic_action).toEqual(expected.replace(/[ \n]/g, ''));
  });
  test.each([["create_case:" + JSON.stringify({
    queue: 'q1',
    agent_email: 'email1',
    case_info: '{}{:::: m"ho menjo tot}',
    note: '{}{:::: m"ho menjo tot2}',
    on_finish: 'payload1'
  }), new _handoff.HandOffBuilder({}).withQueue('q1').withOnFinishPayload('payload1').withAgentEmail('email1').withCaseInfo('{}{:::: m"ho menjo tot}').withNote('{}{:::: m"ho menjo tot2}')], ["create_case:" + JSON.stringify({
    on_finish: '__PATH_PAYLOAD__path1'
  }), new _handoff.HandOffBuilder({}).withOnFinishPath('path1')], ["create_case:" + JSON.stringify({
    agent_id: '1234'
  }), new _handoff.HandOffBuilder({}).withAgentId('1234')]])('HandOffBuilder', function (expected, builder) {
    builder.handOff();
    expect(builder._session._botonic_action).toEqual(expected);
  });
});
//# sourceMappingURL=handoff.test.js.map