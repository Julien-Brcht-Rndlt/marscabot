{"version":3,"sources":["../src/hubtype-service.js"],"names":["_WEBCHAT_PUSHER_KEY_","WEBCHAT_PUSHER_KEY","_HUBTYPE_API_URL_","HUBTYPE_API_URL","ACTIVITY_TIMEOUT","PONG_TIMEOUT","HubtypeService","appId","user","lastMessageId","lastMessageUpdateDate","onEvent","unsentInputs","server","id","init","activityTimeout","pongTimeout","pusher","config","auth","headers","constructHeaders","Pusher","cluster","authEndpoint","forceTLS","resolveServerConfig","channel","subscribe","pusherChannel","connectionPromise","Promise","resolve","reject","cleanAndReject","msg","clearTimeout","connectTimeout","destroyPusher","setTimeout","bind","onConnectionRegained","data","onPusherEvent","connection","event","type","handleConnectionChange","errorMsg","error","code","message","states","current","updateAuthHeaders","online","action","ack","unsentInput","axios","post","sender","validateStatus","status","handleSentInput","handleUnsentInput","disconnect","unsubscribe","unbind_all","channels","resendUnsentInputs","postMessage","get"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Pusher from 'pusher-js'\n\nimport { getWebpackEnvVar } from './utils'\n\nconst _WEBCHAT_PUSHER_KEY_ = getWebpackEnvVar(\n  // eslint-disable-next-line no-undef\n  typeof WEBCHAT_PUSHER_KEY !== 'undefined' && WEBCHAT_PUSHER_KEY,\n  'WEBCHAT_PUSHER_KEY',\n  '434ca667c8e6cb3f641c'\n)\nconst _HUBTYPE_API_URL_ = getWebpackEnvVar(\n  // eslint-disable-next-line no-undef\n  typeof HUBTYPE_API_URL !== 'undefined' && HUBTYPE_API_URL,\n  'HUBTYPE_API_URL',\n  'https://api.hubtype.com'\n)\n\nconst ACTIVITY_TIMEOUT = 20 * 1000 // https://pusher.com/docs/channels/using_channels/connection#activitytimeout-integer-\nconst PONG_TIMEOUT = 5 * 1000 // https://pusher.com/docs/channels/using_channels/connection#pongtimeout-integer-\nexport class HubtypeService {\n  constructor({\n    appId,\n    user,\n    lastMessageId,\n    lastMessageUpdateDate,\n    onEvent,\n    unsentInputs,\n    server,\n  }) {\n    this.appId = appId\n    this.user = user || {}\n    this.lastMessageId = lastMessageId\n    this.lastMessageUpdateDate = lastMessageUpdateDate\n    this.onEvent = onEvent\n    this.unsentInputs = unsentInputs\n    this.server = server\n    if (user.id && (lastMessageId || lastMessageUpdateDate)) {\n      this.init()\n    }\n  }\n\n  resolveServerConfig() {\n    if (!this.server) {\n      return { activityTimeout: ACTIVITY_TIMEOUT, pongTimeout: PONG_TIMEOUT }\n    }\n    return {\n      activityTimeout: this.server.activityTimeout || ACTIVITY_TIMEOUT,\n      pongTimeout: this.server.pongTimeout || PONG_TIMEOUT,\n    }\n  }\n\n  updateAuthHeaders() {\n    if (this.pusher) {\n      this.pusher.config.auth.headers = {\n        ...this.pusher.config.auth.headers,\n        ...this.constructHeaders(),\n      }\n    }\n  }\n\n  init(user, lastMessageId, lastMessageUpdateDate) {\n    if (user) this.user = user\n    if (lastMessageId) this.lastMessageId = lastMessageId\n    if (lastMessageUpdateDate)\n      this.lastMessageUpdateDate = lastMessageUpdateDate\n    if (this.pusher || !this.user.id || !this.appId) return null\n    this.pusher = new Pusher(_WEBCHAT_PUSHER_KEY_, {\n      cluster: 'eu',\n      authEndpoint: `${_HUBTYPE_API_URL_}/v1/provider_accounts/webhooks/webchat/${this.appId}/auth/`,\n      forceTLS: true,\n      auth: {\n        headers: this.constructHeaders(),\n      },\n      ...this.resolveServerConfig(),\n    })\n    this.channel = this.pusher.subscribe(this.pusherChannel)\n    const connectionPromise = new Promise((resolve, reject) => {\n      const cleanAndReject = msg => {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        clearTimeout(connectTimeout)\n        this.destroyPusher()\n        reject(msg)\n      }\n      const connectTimeout = setTimeout(\n        () => cleanAndReject('Connection Timeout'),\n        10000\n      )\n      this.channel.bind('pusher:subscription_succeeded', () => {\n        // Once subscribed, we know that authentication has been done: https://pusher.com/docs/channels/server_api/authenticating-users\n        this.onConnectionRegained()\n        clearTimeout(connectTimeout)\n        resolve()\n      })\n      this.channel.bind('botonic_response', data => this.onPusherEvent(data))\n      this.channel.bind('update_message_info', data => this.onPusherEvent(data))\n\n      this.pusher.connection.bind('error', event => {\n        if (event.type == 'WebSocketError') this.handleConnectionChange(false)\n        else {\n          const errorMsg =\n            event.error && event.error.data\n              ? event.error.data.code || event.error.data.message\n              : 'Connection error'\n          cleanAndReject(`Pusher error (${errorMsg})`)\n        }\n      })\n    })\n    this.pusher.connection.bind('state_change', states => {\n      if (states.current === 'connecting') this.updateAuthHeaders()\n      if (states.current === 'connected') this.handleConnectionChange(true)\n      if (states.current === 'unavailable') this.handleConnectionChange(false)\n    })\n\n    return connectionPromise\n  }\n\n  constructHeaders() {\n    const headers = {}\n    if (this.user && this.user.id) headers['X-BOTONIC-USER-ID'] = this.user.id\n    if (this.lastMessageId)\n      headers['X-BOTONIC-LAST-MESSAGE-ID'] = this.lastMessageId\n    if (this.lastMessageUpdateDate)\n      headers['X-BOTONIC-LAST-MESSAGE-UPDATE-DATE'] = this.lastMessageUpdateDate\n    return headers\n  }\n\n  handleConnectionChange(online) {\n    this.onPusherEvent({ action: 'connectionChange', online })\n  }\n\n  onPusherEvent(event) {\n    if (this.onEvent && typeof this.onEvent === 'function') this.onEvent(event)\n  }\n\n  get pusherChannel() {\n    return `private-encrypted-${this.appId}-${this.user.id}`\n  }\n\n  handleSentInput(message) {\n    this.onEvent({\n      action: 'update_message_info',\n      message: { id: message.id, ack: 1 },\n    })\n  }\n\n  handleUnsentInput(message) {\n    this.onEvent({\n      action: 'update_message_info',\n      message: { id: message.id, ack: 0, unsentInput: message },\n    })\n  }\n\n  async postMessage(user, message) {\n    try {\n      await this.init(user)\n      await axios.post(\n        `${_HUBTYPE_API_URL_}/v1/provider_accounts/webhooks/webchat/${this.appId}/`,\n        {\n          sender: this.user,\n          message: message,\n        },\n        {\n          validateStatus: status => status === 200,\n        }\n      )\n      this.handleSentInput(message)\n    } catch (e) {\n      this.handleUnsentInput(message)\n    }\n  }\n\n  static async getWebchatVisibility({ appId }) {\n    return axios.get(\n      `${_HUBTYPE_API_URL_}/v1/provider_accounts/${appId}/visibility/`\n    )\n  }\n\n  destroyPusher() {\n    if (!this.pusher) return\n    this.pusher.disconnect()\n    this.pusher.unsubscribe(this.pusherChannel)\n    this.pusher.unbind_all()\n    this.pusher.channels = {}\n    this.pusher = null\n  }\n\n  async onConnectionRegained() {\n    await this.resendUnsentInputs()\n  }\n\n  async resendUnsentInputs() {\n    for (const message of this.unsentInputs()) {\n      message.unsentInput &&\n        (await this.postMessage(this.user, message.unsentInput))\n    }\n  }\n}\n"],"file":"hubtype-service.js"}