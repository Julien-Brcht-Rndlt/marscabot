{"version":3,"sources":["../src/router.test.js"],"names":["textInput","type","data","textInputComplex","textPayloadInput","payload","postbackInput","requestInput","input","session","organization","lastRoutePath","testRoute","testSession","user","id","provider","PROVIDER","DEV","bot","is_first_interaction","describe","test","router","Router","expect","processInput","toThrow","NoMatchingRouteError","TypeError","path","action","toBe","matchTextProp","matcher","matchRoute","matchPayloadProp","matchRequestProp","request","toBeTruthy","toBeFalsy","v","startsWith","i","externalRoutes","childRoutes","getRouteActionByPath","getRouteByPath","toBeNull","intent","each","undefined","inputPayload","expectedPath","expectedParams","getOnFinishParams","toEqual","toBeUndefined"],"mappings":"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","sourcesContent":["import { NoMatchingRouteError } from './errors'\nimport { Input, PROVIDER, Route, Session } from './index'\nimport { Router } from './router'\n\n/** @type Input */\nconst textInput = { type: 'text', data: 'hi' }\n/** @type Input */\nconst textInputComplex = { type: 'text', data: 'Cömplêx input &% 🚀' }\n/** @type Input */\nconst textPayloadInput = { type: 'text', data: 'hi', payload: 'foo' }\n/** @type Input */\nconst postbackInput = { type: 'postback', payload: 'foo' }\n\nconst requestInput = {\n  input: textInput,\n  session: { organization: 'myOrg' },\n  lastRoutePath: 'initial',\n}\n\n/**\n * @return {Route}\n */\nfunction testRoute() {\n  return {}\n}\n\n/**\n * @return {Session}\n */\nfunction testSession() {\n  return {\n    user: { id: 'userid', provider: PROVIDER.DEV },\n    bot: { id: 'bot_id' },\n    is_first_interaction: true,\n  }\n}\n\ndescribe('Bad router initialization', () => {\n  test('empty routes throw TypeError', () => {\n    const router = new Router([])\n    expect(() => router.processInput(textInput, testSession())).toThrow(\n      NoMatchingRouteError\n    )\n  })\n  test('null routes throw TypeError', () => {\n    // @ts-ignore\n    const router = new Router()\n    expect(() => router.processInput(textInput, testSession())).toThrow(\n      TypeError\n    )\n  })\n})\n\ntest('Router returns 404', () => {\n  const router = new Router([{ path: '404', action: '404Action' }])\n  const { action } = router.processInput(textInput, testSession())\n  expect(action).toBe('404Action')\n})\n\ndescribe('Match route by MATCHER <> INPUT', () => {\n  const router = new Router([])\n  const matchTextProp = (matcher, textInput) =>\n    router.matchRoute(testRoute(), 'text', matcher, textInput, testSession())\n  const matchPayloadProp = (matcher, payload) =>\n    router.matchRoute(testRoute(), 'payload', matcher, payload, testSession())\n  const matchRequestProp = (matcher, request) =>\n    router.matchRoute(\n      testRoute(),\n      'request',\n      matcher,\n      request.input,\n      request.session,\n      request.lastRoutePath\n    )\n  test('text <> text', () => {\n    expect(matchTextProp('hi', textInput)).toBeTruthy()\n    expect(matchTextProp('hii', textInput)).toBeFalsy()\n    expect(matchTextProp('bye', textInput)).toBeFalsy()\n    expect(matchTextProp('', textInput)).toBeFalsy()\n    expect(matchTextProp(null, textInput)).toBeFalsy()\n    expect(matchTextProp('Cömplêx input &% 🚀', textInputComplex)).toBeTruthy()\n    expect(matchTextProp(' Cömplêx input &% 🚀', textInputComplex)).toBeFalsy() // has a space at the beginning\n  })\n  test('regex <> text', () => {\n    expect(matchTextProp(/hi/, textInput)).toBeTruthy()\n    expect(matchTextProp(/bye/, textInput)).toBeFalsy()\n    expect(matchTextProp(/🚀/, textInputComplex)).toBeTruthy()\n    expect(matchTextProp(/complex/, textInputComplex)).toBeFalsy()\n  })\n  test('function <> text', () => {\n    expect(matchTextProp(v => v.startsWith('hi'), textInput)).toBeTruthy()\n    expect(matchTextProp(v => !v.startsWith('hi'), textInput)).toBeFalsy()\n  })\n  test('input <> text', () => {\n    expect(\n      router.matchRoute(\n        testRoute(),\n        'input',\n        i => i.data.startsWith('hi'),\n        textInput,\n        testSession()\n      )\n    ).toBeTruthy()\n    expect(\n      router.matchRoute(\n        testRoute(),\n        'input',\n        i => !i.data.startsWith('hi'),\n        textInput,\n        testSession()\n      )\n    ).toBeFalsy()\n  })\n  test('text <> text payload', () => {\n    expect(matchPayloadProp('foo', textPayloadInput)).toBeTruthy()\n    expect(matchPayloadProp('fooo', textPayloadInput)).toBeFalsy()\n    expect(matchPayloadProp('bar', textPayloadInput)).toBeFalsy()\n    expect(matchPayloadProp('', textPayloadInput)).toBeFalsy()\n    expect(matchPayloadProp(null, textPayloadInput)).toBeFalsy()\n  })\n  test('regex <> text payload', () => {\n    expect(matchPayloadProp(/foo/, textPayloadInput)).toBeTruthy()\n    expect(matchPayloadProp(/bar/, textPayloadInput)).toBeFalsy()\n  })\n  test('function <> text payload', () => {\n    expect(\n      matchPayloadProp(v => v.startsWith('fo'), textPayloadInput)\n    ).toBeTruthy()\n    expect(\n      matchPayloadProp(v => !v.startsWith('fo'), textPayloadInput)\n    ).toBeFalsy()\n  })\n  test('text <> postback', () => {\n    expect(matchPayloadProp('foo', postbackInput)).toBeTruthy()\n    expect(matchPayloadProp('fooo', postbackInput)).toBeFalsy()\n    expect(matchPayloadProp('bar', postbackInput)).toBeFalsy()\n    expect(matchPayloadProp('', postbackInput)).toBeFalsy()\n    expect(matchPayloadProp(null, postbackInput)).toBeFalsy()\n  })\n  test('regex <> postback', () => {\n    expect(matchPayloadProp(/foo/, postbackInput)).toBeTruthy()\n    expect(matchPayloadProp(/bar/, postbackInput)).toBeFalsy()\n  })\n  test('function <> postback', () => {\n    expect(\n      matchPayloadProp(v => v.startsWith('fo'), postbackInput)\n    ).toBeTruthy()\n    expect(\n      matchPayloadProp(v => !v.startsWith('fo'), postbackInput)\n    ).toBeFalsy()\n  })\n  test('function <> request', () => {\n    expect(\n      matchRequestProp(\n        request =>\n          request.input.data === 'hi' &&\n          request.session.organization === 'myOrg' &&\n          request.lastRoutePath === 'initial',\n        requestInput\n      )\n    ).toBeTruthy()\n    expect(\n      matchRequestProp(\n        request =>\n          request.input.data === 'hello' &&\n          request.session.organization === 'myOrg' &&\n          request.lastRoutePath === 'initial',\n        requestInput\n      )\n    ).toBeFalsy()\n  })\n})\n\ndescribe('Get route by path', () => {\n  const externalRoutes = [\n    { path: '', action: 'DefaultAction' },\n    { path: 'child', action: 'ChildAction' },\n  ]\n  const router = new Router([\n    { path: 'initial', action: 'Initial' },\n    {\n      path: 'flow-1',\n      action: 'Flow1',\n      childRoutes: [\n        {\n          path: '1',\n          action: 'Flow1.1',\n          childRoutes: [\n            { path: '1', action: 'Flow1.1.1' },\n            { path: '2', action: 'Flow1.1.2' },\n            { path: '3', action: 'Flow1.1.3' },\n          ],\n        },\n        { path: '2', action: 'Flow1.2', childRoutes: externalRoutes },\n        {\n          path: '3',\n          action: 'Flow1.3',\n          childRoutes: [\n            { path: '1', action: 'Flow1.3.1' },\n            { path: '2', action: 'Flow1.3.2' },\n            { path: '3', action: 'Flow1.3.3' },\n          ],\n        },\n      ],\n    },\n    { path: '404', action: '404Action' },\n  ])\n  function getRouteActionByPath(path) {\n    // @ts-ignore\n    return router.getRouteByPath(path).action\n  }\n  test('path exists', () => {\n    expect(getRouteActionByPath('initial')).toBe('Initial')\n    expect(getRouteActionByPath('flow-1/1')).toBe('Flow1.1')\n    expect(getRouteActionByPath('flow-1/3/2')).toBe('Flow1.3.2')\n  })\n  test('path exists in composed child routes', () => {\n    expect(getRouteActionByPath('flow-1/2')).toBe('Flow1.2')\n    expect(getRouteActionByPath('flow-1/2/child')).toBe('ChildAction')\n  })\n  test('path does not exist', () => {\n    expect(router.getRouteByPath('')).toBeNull()\n    expect(router.getRouteByPath('foo')).toBeNull()\n    expect(router.getRouteByPath('flow-1/3/2/6')).toBeNull()\n  })\n})\n\ndescribe('Process input (v<0.9)', () => {\n  const externalRoutes = [\n    { path: '', action: 'DefaultAction' },\n    { path: 'child', action: 'ChildAction' },\n  ]\n  const router = new Router([\n    { path: 'help', payload: 'help', action: 'Help' },\n    {\n      path: 'initial',\n      intent: /greeting/,\n      action: 'Flow1',\n      childRoutes: [\n        {\n          path: '1',\n          payload: '1',\n          action: 'Flow1.1',\n          childRoutes: [\n            { path: '1', payload: '1', action: 'Flow1.1.1' },\n            { path: '2', payload: '2', action: 'Flow1.1.2' },\n            { path: '3', payload: '3', action: 'Flow1.1.3' },\n          ],\n        },\n        {\n          path: '2',\n          payload: '2',\n          action: 'Flow1.2',\n          childRoutes: externalRoutes,\n        },\n        {\n          path: '3',\n          payload: '3',\n          action: 'Flow1.3',\n          childRoutes: [\n            { path: '1', payload: '1', action: 'Flow1.3.1' },\n            { path: '2', payload: '2', action: 'Flow1.3.2' },\n            { path: '3', payload: '3', action: 'Flow1.3.3' },\n          ],\n        },\n      ],\n    },\n    { path: '404', action: '404Action' },\n  ])\n  test('text input, root level route', () => {\n    /** @type Input */\n    const input = { type: 'text', data: 'hi', intent: 'greeting' }\n    const lastRoutePath = null\n    expect(\n      router.processInput(input, testSession(), lastRoutePath).action\n    ).toBe('Flow1')\n  })\n  test('payload input, 2nd level route', () => {\n    /** @type Input */\n    const input = { type: 'postback', payload: '2' }\n    const lastRoutePath = 'initial'\n    expect(\n      router.processInput(input, testSession(), lastRoutePath).action\n    ).toBe('Flow1.2')\n  })\n  test('old protocol:path payload input, root level route', () => {\n    /** @type Input */\n    const input = { type: 'postback', payload: '__PATH_PAYLOAD__initial' }\n    const lastRoutePath = ''\n    expect(\n      router.processInput(input, testSession(), lastRoutePath).action\n    ).toBe('Flow1')\n  })\n  test('old protocol:path payload input, root level route with composed path', () => {\n    /** @type Input */\n    const input = { type: 'postback', path: 'initial/2' }\n    const lastRoutePath = ''\n    expect(\n      router.processInput(input, testSession(), lastRoutePath).action\n    ).toBe('Flow1.2')\n  })\n  test('old protocol: path payload input, 2nd level route with lastRoutePath', () => {\n    /** @type Input */\n    const input = { type: 'postback', payload: '__PATH_PAYLOAD__2' }\n    const lastRoutePath = 'initial'\n    expect(\n      router.processInput(input, testSession(), lastRoutePath).action\n    ).toBe('Flow1.2')\n  })\n  test('path payload input with deprecated protocol, root level route', () => {\n    /** @type Input */\n    const input = { type: 'postback', payload: '__PATH_PAYLOAD__initial/2' }\n    const lastRoutePath = ''\n    expect(\n      router.processInput(input, testSession(), lastRoutePath).action\n    ).toBe('Flow1.2')\n  })\n  test('old protocol:path payload input with deprecated protocol, 2nd level route', () => {\n    /** @type Input */\n    const input = { type: 'postback', payload: '__PATH_PAYLOAD__initial/2' }\n    const lastRoutePath = 'initial'\n    expect(\n      router.processInput(input, testSession(), lastRoutePath).action\n    ).toBe('Flow1.2')\n  })\n})\n\ntest.each([\n  [undefined, undefined, undefined],\n  ['', undefined, undefined],\n  ['bad_input', undefined, undefined],\n  ['__PATH_PAYLOAD__', '', undefined],\n  ['xx__PATH_PAYLOAD__path1', 'path1', undefined],\n  ['xx__PATH_PAYLOAD__path1?path1', 'path1', 'path1'],\n])(\n  'getOnFinishParams(%s)=>%s',\n  (inputPayload, expectedPath, expectedParams) => {\n    const router = new Router([])\n    /** @type Input */\n    const input = { type: 'postback', payload: inputPayload }\n    expect(router.getOnFinishParams(input)).toEqual(expectedParams)\n    expect(input.path).toEqual(expectedPath)\n    if (input.path) {\n      expect(input.payload).toBeUndefined()\n    }\n  }\n)\n"],"file":"router.test.js"}