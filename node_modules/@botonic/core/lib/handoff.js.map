{"version":3,"sources":["../src/handoff.js"],"names":["HUBTYPE_API_URL","getOpenQueues","session","baseUrl","_hubtype_api","endpointUrl","headers","Authorization","_access_token","method","url","data","bot_id","bot","id","resp","HandOffBuilder","_session","queueNameOrId","_queue","payload","_onFinish","path","email","_email","agentId","_agentId","note","_note","caseInfo","_caseInfo","shadowing","_shadowing","_humanHandOff","humanHandOff","onFinish","builder","withQueue","withOnFinishPath","withOnFinishPayload","Error","handOff","agentEmail","params","queue","agent_email","agent_id","case_info","on_finish","_botonic_action","JSON","stringify","storeCaseRating","rating","chatId","user","chat_id","getAvailableAgentsByQueue","queueId","getAvailableAgents","botId","getAgentVacationRanges","cancelHandoff","typification","action","deleteUser"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAMA,eAAe,GAAG,yBAAxB;;SAEsBC,a;;;;;iGAAf,kBAA6BC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,OADD,GACWD,OAAO,CAACE,YAAR,IAAwBJ,eADnC;AAECK,YAAAA,WAFD,aAEkBF,OAFlB;AAAA;AAAA,mBAGc,uBAAM;AACvBG,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYL,OAAO,CAACM,aAApB;AADN,eADc;AAIvBC,cAAAA,MAAM,EAAE,MAJe;AAKvBC,cAAAA,GAAG,EAAEL,WALkB;AAMvBM,cAAAA,IAAI,EAAE;AAAEC,gBAAAA,MAAM,EAAEV,OAAO,CAACW,GAAR,CAAYC;AAAtB;AANiB,aAAN,CAHd;;AAAA;AAGCC,YAAAA,IAHD;AAAA,8CAWEA,IAAI,CAACJ,IAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;IAcMK,c;AACX,0BAAYd,OAAZ,EAAqB;AAAA;AACnB,SAAKe,QAAL,GAAgBf,OAAhB;AACD;;;;WAED,mBAAUgB,aAAV,EAAyB;AACvB,WAAKC,MAAL,GAAcD,aAAd;AACA,aAAO,IAAP;AACD;;;WAED,6BAAoBE,OAApB,EAA6B;AAC3B,WAAKC,SAAL,GAAiBD,OAAjB;AACA,aAAO,IAAP;AACD;;;WAED,0BAAiBE,IAAjB,EAAuB;AACrB,WAAKD,SAAL,6BAAoCC,IAApC;AACA,aAAO,IAAP;AACD;;;WAED,wBAAeC,KAAf,EAAsB;AACpB,WAAKC,MAAL,GAAcD,KAAd;AACA,aAAO,IAAP;AACD;;;WAED,qBAAYE,OAAZ,EAAqB;AACnB,WAAKC,QAAL,GAAgBD,OAAhB;AACA,aAAO,IAAP;AACD;;;WAED,kBAASE,IAAT,EAAe;AACb,WAAKC,KAAL,GAAaD,IAAb;AACA,aAAO,IAAP;AACD;;;WAED,sBAAaE,QAAb,EAAuB;AACrB,WAAKC,SAAL,GAAiBD,QAAjB;AACA,aAAO,IAAP;AACD;;;WAED,yBAAgC;AAAA,UAAlBE,SAAkB,uEAAN,IAAM;AAC9B,WAAKC,UAAL,GAAkBD,SAAlB;AACA,aAAO,IAAP;AACD;;;;mGAED;AAAA;AAAA;AAAA;AAAA;AAAA,iDACSE,aAAa,CAClB,KAAKhB,QADa,EAElB,KAAKE,MAFa,EAGlB,KAAKE,SAHa,EAIlB,KAAKG,MAJa,EAKlB,KAAKE,QALa,EAMlB,KAAKI,SANa,EAOlB,KAAKF,KAPa,EAQlB,KAAKI,UARa,CADtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;AAcF;AACA;AACA;;;;;SACsBE,Y;;;;;iGAAf,kBAA4BhC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqCgB,YAAAA,aAArC,8DAAqD,EAArD;AAAyDiB,YAAAA,QAAzD;AACCC,YAAAA,OADD,GACW,IAAIpB,cAAJ,CAAmBd,OAAnB,CADX;;AAEL,gBAAIgB,aAAJ,EAAmB;AACjBkB,cAAAA,OAAO,CAACC,SAAR,CAAkBnB,aAAlB;AACD;;AAJI,iBAKDiB,QALC;AAAA;AAAA;AAAA;;AAAA,iBAMCA,QAAQ,CAACb,IANV;AAAA;AAAA;AAAA;;AAODc,YAAAA,OAAO,CAACE,gBAAR,CAAyBH,QAAQ,CAACb,IAAlC;AAPC;AAAA;;AAAA;AAAA,iBAQQa,QAAQ,CAACf,OARjB;AAAA;AAAA;AAAA;;AASDgB,YAAAA,OAAO,CAACG,mBAAR,CAA4BJ,QAAQ,CAACf,OAArC;AATC;AAAA;;AAAA;AAAA,kBAWK,IAAIoB,KAAJ,CAAU,yCAAV,CAXL;;AAAA;AAAA,8CAcEJ,OAAO,CAACK,OAAR,EAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAiBQR,a;;;;;iGAAf,kBACE/B,OADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEgB,YAAAA,aAFF,8DAEkB,EAFlB;AAGEiB,YAAAA,QAHF;AAIEO,YAAAA,UAJF,8DAIe,EAJf;AAKEjB,YAAAA,OALF,8DAKY,EALZ;AAMEI,YAAAA,QANF,8DAMa,EANb;AAOEF,YAAAA,IAPF,8DAOS,EAPT;AAQEI,YAAAA,SARF,8DAQc,KARd;AAUQY,YAAAA,MAVR,GAUiB,EAVjB;;AAWE,gBAAIzB,aAAJ,EAAmB;AACjByB,cAAAA,MAAM,CAACC,KAAP,GAAe1B,aAAf;AACD;;AACD,gBAAIwB,UAAJ,EAAgB;AACdC,cAAAA,MAAM,CAACE,WAAP,GAAqBH,UAArB;AACD;;AACD,gBAAIjB,OAAJ,EAAa;AACXkB,cAAAA,MAAM,CAACG,QAAP,GAAkBrB,OAAlB;AACD;;AACD,gBAAII,QAAJ,EAAc;AACZc,cAAAA,MAAM,CAACI,SAAP,GAAmBlB,QAAnB;AACD;;AACD,gBAAIF,IAAJ,EAAU;AACRgB,cAAAA,MAAM,CAAChB,IAAP,GAAcA,IAAd;AACD;;AACD,gBAAII,SAAJ,EAAe;AACbY,cAAAA,MAAM,CAACZ,SAAP,GAAmBA,SAAnB;AACD;;AACD,gBAAII,QAAJ,EAAc;AACZQ,cAAAA,MAAM,CAACK,SAAP,GAAmBb,QAAnB;AACD;;AACDjC,YAAAA,OAAO,CAAC+C,eAAR,yBAAyCC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAzC;;AAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmCsBS,e;;;;;mGAAf,kBAA+BlD,OAA/B,EAAwCmD,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACClD,YAAAA,OADD,GACWD,OAAO,CAACE,YAAR,IAAwBJ,eADnC;AAECsD,YAAAA,MAFD,GAEUpD,OAAO,CAACqD,IAAR,CAAazC,EAFvB;AAAA;AAAA,mBAGc,uBAAM;AACvBR,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYL,OAAO,CAACM,aAApB;AADN,eADc;AAIvBC,cAAAA,MAAM,EAAE,MAJe;AAKvBC,cAAAA,GAAG,YAAKP,OAAL,uBAAyBmD,MAAzB,wBALoB;AAMvB3C,cAAAA,IAAI,EAAE;AAAE6C,gBAAAA,OAAO,EAAEF,MAAX;AAAmBD,gBAAAA,MAAM,EAANA;AAAnB;AANiB,aAAN,CAHd;;AAAA;AAGCtC,YAAAA,IAHD;AAAA,8CAWEA,IAAI,CAACJ,IAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAce8C,yB;;;;;6GAAf,kBAAyCvD,OAAzC,EAAkDwD,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AACCvD,YAAAA,OADD,GACWD,OAAO,CAACE,YAAR,IAAwBJ,eADnC;AAAA;AAAA,mBAEc,uBAAM;AACvBM,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYL,OAAO,CAACM,aAApB;AADN,eADc;AAIvBC,cAAAA,MAAM,EAAE,MAJe;AAKvBC,cAAAA,GAAG,YAAKP,OAAL,wBAA0BuD,OAA1B;AALoB,aAAN,CAFd;;AAAA;AAEC3C,YAAAA,IAFD;AAAA,8CASEA,IAAI,CAACJ,IATP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAYegD,kB;;;;;sGAAf,kBAAkCzD,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,OADD,GACWD,OAAO,CAACE,YAAR,IAAwBJ,eADnC;AAEC4D,YAAAA,KAFD,GAES1D,OAAO,CAACW,GAAR,CAAYC,EAFrB;AAAA;AAAA,mBAGc,uBAAM;AACvBR,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYL,OAAO,CAACM,aAApB;AADN,eADc;AAIvBC,cAAAA,MAAM,EAAE,MAJe;AAKvBC,cAAAA,GAAG,YAAKP,OAAL,sBAAwByD,KAAxB;AALoB,aAAN,CAHd;;AAAA;AAGC7C,YAAAA,IAHD;AAAA,8CAUEA,IAAI,CAACJ,IAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAaekD,sB;;;;;0GAAf,kBAAsC3D,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiDuB,YAAAA,OAAjD,QAAiDA,OAAjD,EAA0DiB,UAA1D,QAA0DA,UAA1D;AACCvC,YAAAA,OADD,GACWD,OAAO,CAACE,YAAR,IAAwBJ,eADnC;AAEC4D,YAAAA,KAFD,GAES1D,OAAO,CAACW,GAAR,CAAYC,EAFrB;AAAA;AAAA,mBAGc,uBAAM;AACvBR,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYL,OAAO,CAACM,aAApB;AADN,eADc;AAIvBC,cAAAA,MAAM,EAAE,KAJe;AAKvBC,cAAAA,GAAG,YAAKP,OAAL,sBAAwByD,KAAxB,gCALoB;AAMvBjB,cAAAA,MAAM,EAAE;AAAEG,gBAAAA,QAAQ,EAAErB,OAAZ;AAAqBoB,gBAAAA,WAAW,EAAEH;AAAlC;AANe,aAAN,CAHd;;AAAA;AAGC3B,YAAAA,IAHD;AAAA,8CAWEA,IAAI,CAACJ,IAXP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAcA,SAASmD,aAAT,CAAuB5D,OAAvB,EAAqD;AAAA,MAArB6D,YAAqB,uEAAN,IAAM;AAC1D,MAAIC,MAAM,GAAG,cAAb;AACA,MAAID,YAAJ,EAAkBC,MAAM,aAAMA,MAAN,cAAgBd,IAAI,CAACC,SAAL,CAAe;AAAEY,IAAAA,YAAY,EAAZA;AAAF,GAAf,CAAhB,CAAN;AAClB7D,EAAAA,OAAO,CAAC+C,eAAR,GAA0Be,MAA1B;AACD;;AAEM,SAASC,UAAT,CAAoB/D,OAApB,EAA6B;AAClCA,EAAAA,OAAO,CAAC+C,eAAR;AACD","sourcesContent":["import axios from 'axios'\n\nconst HUBTYPE_API_URL = 'https://api.hubtype.com'\n\nexport async function getOpenQueues(session) {\n  const baseUrl = session._hubtype_api || HUBTYPE_API_URL\n  const endpointUrl = `${baseUrl}/v1/queues/get_open_queues/`\n  const resp = await axios({\n    headers: {\n      Authorization: `Bearer ${session._access_token}`,\n    },\n    method: 'post',\n    url: endpointUrl,\n    data: { bot_id: session.bot.id },\n  })\n  return resp.data\n}\n\nexport class HandOffBuilder {\n  constructor(session) {\n    this._session = session\n  }\n\n  withQueue(queueNameOrId) {\n    this._queue = queueNameOrId\n    return this\n  }\n\n  withOnFinishPayload(payload) {\n    this._onFinish = payload\n    return this\n  }\n\n  withOnFinishPath(path) {\n    this._onFinish = `__PATH_PAYLOAD__${path}`\n    return this\n  }\n\n  withAgentEmail(email) {\n    this._email = email\n    return this\n  }\n\n  withAgentId(agentId) {\n    this._agentId = agentId\n    return this\n  }\n\n  withNote(note) {\n    this._note = note\n    return this\n  }\n\n  withCaseInfo(caseInfo) {\n    this._caseInfo = caseInfo\n    return this\n  }\n\n  withShadowing(shadowing = true) {\n    this._shadowing = shadowing\n    return this\n  }\n\n  async handOff() {\n    return _humanHandOff(\n      this._session,\n      this._queue,\n      this._onFinish,\n      this._email,\n      this._agentId,\n      this._caseInfo,\n      this._note,\n      this._shadowing\n    )\n  }\n}\n\n/**\n * @deprecated use {@link HandOffBuilder} class instead\n */\nexport async function humanHandOff(session, queueNameOrId = '', onFinish) {\n  const builder = new HandOffBuilder(session)\n  if (queueNameOrId) {\n    builder.withQueue(queueNameOrId)\n  }\n  if (onFinish) {\n    if (onFinish.path) {\n      builder.withOnFinishPath(onFinish.path)\n    } else if (onFinish.payload) {\n      builder.withOnFinishPayload(onFinish.payload)\n    } else {\n      throw new Error('onFinish requires payload or path field')\n    }\n  }\n  return builder.handOff()\n}\n\nasync function _humanHandOff(\n  session,\n  queueNameOrId = '',\n  onFinish,\n  agentEmail = '',\n  agentId = '',\n  caseInfo = '',\n  note = '',\n  shadowing = false\n) {\n  const params = {}\n  if (queueNameOrId) {\n    params.queue = queueNameOrId\n  }\n  if (agentEmail) {\n    params.agent_email = agentEmail\n  }\n  if (agentId) {\n    params.agent_id = agentId\n  }\n  if (caseInfo) {\n    params.case_info = caseInfo\n  }\n  if (note) {\n    params.note = note\n  }\n  if (shadowing) {\n    params.shadowing = shadowing\n  }\n  if (onFinish) {\n    params.on_finish = onFinish\n  }\n  session._botonic_action = `create_case:${JSON.stringify(params)}`\n}\n\nexport async function storeCaseRating(session, rating) {\n  const baseUrl = session._hubtype_api || HUBTYPE_API_URL\n  const chatId = session.user.id\n  const resp = await axios({\n    headers: {\n      Authorization: `Bearer ${session._access_token}`,\n    },\n    method: 'post',\n    url: `${baseUrl}/v1/chats/${chatId}/store_case_rating/`,\n    data: { chat_id: chatId, rating },\n  })\n  return resp.data\n}\n\nexport async function getAvailableAgentsByQueue(session, queueId) {\n  const baseUrl = session._hubtype_api || HUBTYPE_API_URL\n  const resp = await axios({\n    headers: {\n      Authorization: `Bearer ${session._access_token}`,\n    },\n    method: 'post',\n    url: `${baseUrl}/v1/queues/${queueId}/get_available_agents/`,\n  })\n  return resp.data\n}\n\nexport async function getAvailableAgents(session) {\n  const baseUrl = session._hubtype_api || HUBTYPE_API_URL\n  const botId = session.bot.id\n  const resp = await axios({\n    headers: {\n      Authorization: `Bearer ${session._access_token}`,\n    },\n    method: 'post',\n    url: `${baseUrl}/v1/bots/${botId}/get_agents/`,\n  })\n  return resp.data\n}\n\nexport async function getAgentVacationRanges(session, { agentId, agentEmail }) {\n  const baseUrl = session._hubtype_api || HUBTYPE_API_URL\n  const botId = session.bot.id\n  const resp = await axios({\n    headers: {\n      Authorization: `Bearer ${session._access_token}`,\n    },\n    method: 'get',\n    url: `${baseUrl}/v1/bots/${botId}/get_agent_vacation_ranges/`,\n    params: { agent_id: agentId, agent_email: agentEmail },\n  })\n  return resp.data\n}\n\nexport function cancelHandoff(session, typification = null) {\n  let action = 'discard_case'\n  if (typification) action = `${action}:${JSON.stringify({ typification })}`\n  session._botonic_action = action\n}\n\nexport function deleteUser(session) {\n  session._botonic_action = `delete_user`\n}\n"],"file":"handoff.js"}